:: Bird Tower No Hunt
<<effects>>

<<bHe>> spreads <<bhis>> wings and launches from the tower.
<br><br>
<<set $bird.timer to random(30, 60)>>
<<set $bird.state to "hunting">>
<<if $birdPerch>>
	<<link [[Next|Bird Tower Perch]]>><<endevent>><</link>>
<<else>>
	<<link [[Next|Bird Tower]]>><<endevent>><</link>>
<</if>>
<<unset $birdPerch>>
<br>

:: Bird Tower Hunt Ask
<<effects>>
<<if $bird.hunts.unlocked is false>>
	<!-- First hunt -->
	You stop <<bhim>> just as <<bhes>> about to launch from the tower.
	<<if $speech_attitude is "meek">>
		"I-I want to help," you say. "Let me come with you."
	<<elseif $speech_attitude is "bratty">>
		"I can't let you keep doing all the work," you say. "I'm coming with you."
	<<else>>
		"You've been doing this for me for so long. I'm coming with you," you say.
	<</if>>
<<else>>
	<!-- Subsequent hunts -->
	You stand beside <<bhim>>.
	<<if $speech_attitude is "meek">>
		"I-I'll join you," you say.
	<<elseif $speech_attitude is "bratty">>
		"I want to stretch my wings," you say. "I'm coming with you."
	<<else>>
		"I'll join you," you say.
	<</if>>
<</if>>
<br><br>

<<if $birdFly isnot 1>>
	<!-- Player hasn't learned to fly -->
	<<if $monster is 1>>
		<<bHe>> looks at you for a moment. "No. <<Wife>> is not ready yet." Before you can ask why, <<bhe>> flaps <<bhis>> wings for emphasis. "Can not carry you for hunt. When <<wife>> is ready, we can go together."
	<<else>>
		<<bHe>> looks at you for a moment. <<bHe>> flaps his wings at you and shakes <<bhis>> head. <<bHe>> seems to think you're not ready. 
	<</if>>
	<<bHe>> spreads <<bhis>> wings, and launches from the tower.
	<br><br>

	<<link [[Next|Bird Tower No Hunt]]>><</link>>
	<br>
<<elseif $bird.hunts.unlocked is false>>
	<!-- First hunt, can't happen during poor flying weather -->
	<<if $weather is "rain">>
		<<if $monster is 1>>
			<<bHe>> looks at you for a moment, clearly surprised. "Would love to hunt with <<wife>>. But now is not good time for you to learn," <<bhe>> says apologetically, gesturing to the rainy skies.
		<<else>>
			<<bHe>> looks at you for a moment, then lets out a meek squawk. <<bHe>> gazes at the rainy skies before shaking <<bhis>> head. Maybe if the weather was better <<bhe>> would be willing to take you along.
		<</if>>
		<<bHe>> spreads <<bhis>> wings, and launches from the tower.
		<br><br>

		<<link [[Next|Bird Tower No Hunt]]>><</link>>
		<br>
	<<else>>
		<<if $monster is 1>>
			<<bHe>> looks at you for a moment, clearly surprised. "Would be happy to hunt with <<wife>>!" <<bHe>> seems excited. "Much to learn. Will teach <<wife>>. Stay close," <<bhe>> says, beckoning you to the edge of the perch.
			<br><br>

			<<bHe>> spreads <<bhis>> wings and launches from the tower. You jump out after <<bhim>>. You're not used to flying like <<bhe>> is, but you do your best. With the help of the wind, you're just barely able to keep pace with <<bhim>>, although it's clear <<bhes>> going slower than usual. "<<Wife>> is doing good. <<Wife>> is ready to hunt," <<bhe>> says. <<bHe>> changes direction, and you follow.
		<<else>>
			<<bHe>> looks at you for a moment, then lets out a squawk followed by a small, happy screech. <<bHe>> nudges you closer to the edge of the perch.
			<br><br>
			
			<<bHe>> spreads <<bhis>> wings and launches from the tower. You jump out after <<bhim>>. You're not used to flying like <<bhe>> is, but you do your best. With the help of the wind, you're just barely able to keep pace with <<bhim>>, although it's clear <<bhes>> going slower than usual. <<bHe>> screeches and changes direction. You follow <<bhim>>.
		<</if>>
		<br><br>

		<<link [[Next (0:30)|Bird Hunt Intro]]>><<pass 30>><<unset $birdPerch>><</link>>
		<br>
	<</if>>
<<else>>
	<!-- Subsequent hunts -->
	<<set $bird.hunts.duo to true>>
	<<set $dateCount.Total++>><<set $dateCount.GreatHawkHunts++>>
	<<if $monster is 1>>
		"Would be happy to hunt with wife," <<bhe>> says. <<bHe>> spreads his wings and leaps out of the tower. You follow after <<bhim>>.
	<<else>>
		<<bHe>> lets out a small squawk and beckons you with his wing. <<bHe>> then spreads <<bhis>> wings and leaps out of the tower. You follow after <<bhim>>.
	<</if>>
	<br><br>

	<<flight_time_check 30>>
	<<link [[Hunt|Bird Hunt Goal]]>><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<unset $birdPerch>><<bird_pass _flightTime>><<endevent>><</link>><<print _fatigueText>>
	<br>
<</if>>

:: Bird Hunt Intro
<<set $outside to 1>><<effects>>
<<if $monster is 1>>
	"Always fly high, prey won't see you," <<bhe>> instructs. "Be fast. Never let prey anticipate strike." You keep flying over the moor, looking for an opportune moment. Soon, your mate spots something. "There," <<bhe>> says, turning towards movement in the heather. A scattered group of lurkers. "Watch. Will show <<wife>> how to strike."
	<br><br>

	True to <<bhis>> word, <<bhe>> swoops down like lightning and grabs one in <<bhis>> talons. <<bHe>> barely loses any speed, returning to your side quickly. The creature struggles for a moment before going limp. "Our prey is weak from the sky. Not built for high up. <<Wife>> can hunt too." <<bHe>> begins to circle, waiting for you to grab one as well.
<<else>>
	You observe <<bhis>> methods. <<bHe>> makes sure to fly high and wait for a good opportunity. After a moment, <<bhe>> turns his head towards movement in the heather; a scattered group of lurkers. <<bHe>> readies his talons, preparing to strike.
	<br><br>

	<<bHe>> swiftly swoops down and grabs one in <<bhis>> talons. <<bHe>> barely loses any speed, returning to your side quickly. The creature struggles for a moment before going limp. It seems they can't handle the change in altitude. Maybe you could get one too.
<</if>>
<br><br>

<<link [[Try to grab one|Bird Hunt Intro 2]]>><</link>>
<br>

:: Bird Hunt Intro 2
<<effects>>

You came here to hunt, and hunt you will.
<br><br>

Using your wings to swoop downward isn't something you're familiar with, but your instincts guide you. It feels similar to muscle memory, as your wings fold and your arms rear back for a grab. Your mind hones in on your target, and the rushing air is all you can hear. The lurkers aren't expecting another attack, allowing you to catch one easily.
<br><br>

The recovery isn't as easy. The sudden weight shift and the returning force from grabbing an object at high speed throws you off balance. You manage to right yourself, but you're too close to the ground. You instinctively lower your legs, making contact with the ground. You run with your momentum and use the speed to take off again.
<br><br>

It struggles in your hands. You manage to pick up wind and soar to the sky. As soon as you reach the clouds, the creature falls limp.
<<if $monster is 1>>
	You look over to your <<nnpc_wife "Great Hawk">>. <<bHe>> seems proud of you. <<npcincr "Great Hawk" love 3>><<gglove>>
	<br><br>

	"Good hunt. <<Wife>> learns so fast! We return home," <<bhe>> says. You follow <<bhim>> until you see the tower.
<<else>>
	You look over at your <<beasttype>>. <<bHe>> seems proud of you. <<npcincr "Great Hawk" love 3>><<gglove>>
	<br><br>

	<<bHe>> squawks in satisfaction and begins to fly back towards the tower.
<</if>>
<br><br>

<<link [[Next (0:30)|Bird Hunt Intro 3]]>><<pass 30>><</link>>
<br>

:: Bird Hunt Intro 3
<<effects>><<set $outside to 0>>

With your successful hunts, you fly back to the castle. Looking at the prey in your hands, you feel a primal sense of satisfaction. <<stress -12>><<llstress>>
<br><br>

Soon, you both arrive at the castle and land in the nest. You set down your lurkers.

<<if $monster is 1>>
	"<<Wife>> did good. Knew you are good mate," <<bhe>> says.
	<br><br>

	<<link [[Hug|Bird Hunt Intro Hug]]>><<npcincr "Great Hawk" love 1>><</link>><<glove>>
<<else>>
	The <<beasttype>> looks at you happily.
	<br><br>

	<<link [[Pet|Bird Hunt Intro Hug]]>><<npcincr "Great Hawk" love 1>><</link>><<glove>>
<</if>>
<br>
<<link [[Eat the lurker|Bird Hunt Intro Eat]]>><<hunger -2000>><<trauma -6>><<transform bird 1>><</link>><<ltrauma>>
<br>
<<link [[Give your lurker to your spouse|Bird Hunt Intro No Eat]]>><<npcincr "Great Hawk" dom -1>><</link>><<ldom>>
<br>

:: Bird Hunt Intro Hug
<<effects>>

<<if $monster is 1>>
	You suddenly hug <<bhim>>. It takes <<bhim>> by surprise, but <<bhe>> returns it. "Not used to <<wife>>'s affections. But still like it."
<<else>>
	You pet <<bhis>> head. This surprises <<bhim>>, but <<bhes>> quick to start nuzzling <<bhis>> head to your hand. <<bHe>> makes small sounds of satisfaction.
<</if>>
<br><br>

<<link [[Eat the lurker|Bird Hunt Intro Eat]]>><<hunger -2000>><<trauma -6>><<transform bird 1>><</link>><<ltrauma>>
<br>
<<link [[Give your lurker to your spouse|Bird Hunt Intro No Eat]]>><<npcincr "Great Hawk" dom -1>><</link>><<ldom>>
<br>

:: Bird Hunt Intro Eat
<<effects>>
You return your attention to your catch.
<<if $bird.loot.lurker gte 50>>
	You're filled with the desire to eat it. Your <<beasttype>> has already started eating <<bhis>>. You follow your instinct once again, and are filled with satisfaction, as well as a strange warmth. <<drugs 60>><<ltrauma>>
<<else>>
	Eating it doesn't seem so repulsive anymore. Your <<beasttype>> has already started eating <<bhis>>. You take a deep breath, and take a bite. You're filled with primal satisfaction once again, as well as a strange warmth. <<drugs 60>><<ltrauma>>
<</if>>
<br><br>

<<if $monster is 1>>
	The <<beasttype>> speaks up. "Would be happy to hunt with <<wife>> again."
<<else>>
	The <<beasttype>> looks over at you and gives another happy screech.
<</if>>
<br>
<span class="gold">You can now go hunting with the Great Hawk.</span>
<br>
<span class="blue">Feasting on the lurker felt good. You should hunt them more often.</span> <span class="gold">You can now hunt for lurkers on your own.</span>
<br><br>
<<set $bird.hunts.unlocked to true>>
<<set $bird.hunts.lurkers to true>>
<<set $bird.timer to 90>>
<<set $dateCount.Total++>><<set $dateCount.GreatHawkHunts++>>

<<link [[Next|Bird Tower]]>><<endevent>><</link>>
<br>

:: Bird Hunt Intro No Eat
<<effects>>

You place your lurker in front of the <<beasttype>>.
<<if $monster is 1>>
	<<bHe>> looks to you with concern. "<<Wife>> worked hard, should eat too." Despite <<bhis>> protest, <<bhe>> eventually eats it. "Would be happy to hunt with <<wife>> again."
<<else>>
	<<bHe>> looks to you with concern, but eats it anyways. <<bHe>> gives another happy screech.
<</if>>
<br>
<span class="gold">You can now go hunting with the Great Hawk.</span>
<br><br>
<<set $bird.hunts.unlocked to true>>
<<set $bird.timer to 90>>
<<set $dateCount.Total++>><<set $dateCount.GreatHawkHunts++>>

<<link [[Next|Bird Tower]]>><<endevent>><</link>>
<br>


:: Bird Hunt Start
<<effects>>

You stand on the edge of the perch, spreading your wings. You feel for the wind while looking out to the moor. Your focus sharpens.
<br><br>

<<flight_time_check 30>>
<<print '<<link [[Hunt alone('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Start Alone]]>><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<unset $birdPerch>><<bird_pass _flightTime>><</link>>'>><<print _fatigueText>>
<br>
<<if ($bird.activity is "sing" or $bird.activity is "groom") and $bird.state is "home">>
	<<if $bird.hunts.injured gt 1>>
		<span class="red">Your spouse won't be able to hunt with you until <<bhis>> wing heals.</span>
	<<else>>
		<<link [[Hunt together|Bird Hunt Start Ask]]>><<npcincr "Great Hawk" dom 1>><</link>><<gdom>>
	<</if>>
	<br>
<</if>>
<<link [[Step away|Bird Tower Perch]]>><<endevent>><</link>>
<br>

:: Bird Hunt Start Injured
<<effects>>

<<if $speech_attitude is "meek">>
	"I-I'll hunt for you," you say. "I'll bring back something nice."
<<elseif $speech_attitude is "bratty">>
	"Looks like I have to do all the work," you say. "Protect the nest. I'll be back soon."
<<else>>
	"I'll hunt for you," you say. "Just stay here and rest."
<</if>>
<br><br>

<<if $monster is 1>>
	"<<Wife>>? I am sorry. Thank you."
<<else>>
	<<bHe>> lets out a low trill of shame, but nuzzles you in thanks.
<</if>>
<br><br>

You stand on the edge of the perch, spreading your wings. You feel for the wind while looking out to the moor. Your focus sharpens. You spread your wings and leap from the tower.
<br><br>

<<link [[Next|Bird Hunt Goal]]>><<endevent>><</link>>
<br>

:: Bird Hunt Start Ask
<<effects>>

You turn to the <<beasttype>>.
<<if $speech_attitude is "meek">>
	"C-can you come with me? I'm still nervous about hunting alone," you say.
<<elseif $speech_attitude is "bratty">>
	"I want to stretch my wings," you say. "Might catch a lurker or two while I'm at it. You coming?"
<<else>>
	"I'm going hunting. Will you come with me?" you ask.
<</if>>
<br><br>

<!-- Futureproofing, some pregnancy content will require either player or hawk to remain at nest -->
<<if $bird.hunts.injured is 1>>
	<<set $bird.hunts.injured to 0>>
	<<set $bird.hunts.duo to true>>
	<<set $dateCount.Total++>><<set $dateCount.GreatHawkHunts++>>
	<<bHe>> stretches out <<bhis>> injured wing, <span class="green">showing no signs of strain. It's healed.</span>
	<<if $monster is 1>>
		"Finally. We return to the skies together."
	<<else>>
		<<bHe>> looks out over the moor with a harsh gaze. <<bHe>> seems to be eager to hunt with you again.
	<</if>>
<<else>>
	<<set $bird.hunts.duo to true>>
	<<set $dateCount.Total++>><<set $dateCount.GreatHawkHunts++>>
	<<if $monster is 1>>
		"<<Wife>> wants to hunt?" <<bhe>> asks as <<bhe>> gets up. "Then we hunt." 
	<<else>>
		<<bHe>> gets up, then lets out a small affirmative caw.
	<</if>>
<</if>>
<br><br>

<<flight_time_check 30 "silent">>
<<if $bird.hunts.duo is true>>
	You both spread your wings and leap out of the tower, beginning your hunt.
	<br><br>

	<<print '<<link [[Hunt together ('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Goal]]>><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<unset $birdPerch>><<bird_pass _flightTime>><<endevent>><</link>>'>><<print _fatigueText>>
	<br>
<<else>>
	<<print '<<link [[Hunt alone ('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Start Alone]]>><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<unset $birdPerch>><<bird_pass _flightTime>><</link>>'>><<print _fatigueText>>
	<br>
	<<link [[Step away|Bird Tower Perch]]>><<endevent>><</link>>
	<br>
<</if>>

:: Bird Hunt Start Alone
<<effects>>

<<if ($bird.activity is "sing" or $bird.activity is "groom") and $bird.state is "home">>
	<<if $bird.hunts.injured gte 1>>
		The <<beasttype>> stirs.
		<<if $monster is 1>>
			"Have a good hunt, <<wife>>," <<bhe>> says, trying to hide a bit of shame in <<bhis>> voice. "Return soon."
		<<else>>
			<<bHe>> squawks shamefully as you approach the edge of the perch, wishing you luck in your hunt.
		<</if>>
	<<else>>
		You decide to hunt alone. The <<beasttype>> stirs.
		<<if $monster is 1>>
			"Have a good hunt, <<wife>>," <<bhe>> says. "Return soon."
		<<else>>
			<<bHe>> squawks as you approach the edge of the perch, wishing you luck in your hunt.
		<</if>>
	<</if>>
	<br><br>
<</if>>

<<set $bird.hunts.duo to false>>
You spread your wings and leap from the tower.
<br><br>

<<link [[Next|Bird Hunt Goal]]>><<endevent>><</link>>
<br>

:: Bird Hunt Goal
<<set $outside to 1>><<set $location to "moor">><<effects>>
<<if !$bird.hunts.loot>>
	<<set $bird.hunts.loot to {}>>
	<<set $bird.hunts.lootAmount to 0>>
	<<set $bird.hunts.weight to 0>>
	<<set $bird.hunts.goal to "">>
	<<set $bird.hunts.direction to "">>
	<<set $bird.hunts.distanceNorth to 0>>
	<<set $bird.hunts.distanceEast to 0>>
	<<set $bird.hunts.ignored to 0>>
<</if>>
<<if $phase is 1>>
	<<set $phase to 0>>
	You choose to hunt for something else. 
<<else>>
	You catch the wind and fly high up into the air.
	<<if $weather is "rain">>
		The rain hinders your flight, but you persist. <<gtiredness>><<tiredness 2>>
	<</if>>
<</if>>
<br><br>

What will you hunt for?
<br>
<<if $bird.hunts.lurkers is true>>
	<<link [[Food|Bird Hunt Direction]]>><<set $bird.hunts.goal to "lurkers">><</link>>
	<br>
<</if>>
<<if $bird.hunts.materials is true>>
	<<link [[Materials|Bird Hunt Direction]]>><<set $bird.hunts.goal to "materials">><</link>>
	<br>
<</if>>
<<if $bird.hunts.valuables is true>>
	<<link [[Valuables|Bird Hunt Direction]]>><<set $bird.hunts.goal to "valuables">><</link>>
	<br>
<</if>>
<<if $bird.hunts.duo is true>>
	<<link [[Let the Great Hawk decide|Bird Hunt Direction]]>><<set $bird.hunts.goal to "hawk">><<npcincr "Great Hawk" dom 1>><</link>><<gdom>>
	<br>
<</if>>

:: Bird Hunt Direction
<<effects>>
<<if $bird.hunts.duo is true>>
	<<npc "Great Hawk">><<person1>>
	You tell the <<beasttype>> that you want to
<<else>>
	You decide to
<</if>>
<<switch $bird.hunts.goal>>
	<<case "lurkers">>find some proper prey to hunt.
	<<case "materials">>find something to improve the castle.
	<<case "valuables">>find something valuable, or otherwise eye-catching.
	<<case "hawk">> follow <<bhim>>.
<</switch>>
<br><br>

<<flight_time_check 20 "silent">>
<<if $bird.hunts.duo is true and $bird.hunts.goal is "hawk">>
	<<set _directionPool to []>>
	<<if $bird.hunts.distanceNorth lt 5 and $bird.hunts.distanceNorth isnot -1>>
		<<run _directionPool.pushUnique("north")>>
	<</if>>
	<<if $bird.hunts.distanceEast lt 5 and $bird.hunts.distanceEast isnot -1>>
		<<run _directionPool.pushUnique("east")>>
	<</if>>
	<<if $bird.hunts.distanceNorth gt -5 and $bird.hunts.distanceNorth isnot 1>>
		<<run _directionPool.pushUnique("south")>>
	<</if>>
	<<if $bird.hunts.distanceEast gt -5 and $bird.hunts.distanceEast isnot 1>>
		<<run _directionPool.pushUnique("west")>>
	<</if>>
	<<set $bird.hunts.direction to _directionPool.pluck()>>
	<<if $monster is 1>>
		"<<Wife>> follows? I will lead," <<bhe>> says, flying $bird.hunts.direction.
	<<else>>
		<<bHe>> screeches in response and starts flying $bird.hunts.direction.
	<</if>>
	<<switch $bird.hunts.direction>>
		<<case "north">><<set $bird.hunts.distanceNorth++>>
		<<case "east">><<set $bird.hunts.distanceEast++>>
		<<case "south">><<set $bird.hunts.distanceNorth-->>
		<<case "west">><<set $bird.hunts.distanceEast-->>
	<</switch>>
	<<bird_loot_select>>
	<br><br>

	<<print '<<link [[Next ('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Event]]>><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<bird_pass _flightTime>><<endevent>><</link>>'>><<print _fatigueText>>
	<br>
<<else>>
	<<if $bird.hunts.duo is true>>
		<<if $monster is 1>>
			"Will help <<wife>> hunt," <<bhe>> says.
		<<else>>
			<<bHe>> screeches in response.
		<</if>>
		<br><br>
	<</if>>

	With a plan in mind, you decide hunt:
	<br>

	<<if $bird.hunts.distanceNorth lt 5>>
		<<print '<<link [[North ('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Event]]>><<set $bird.hunts.direction to "north">><<set $bird.hunts.distanceNorth++>><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<bird_pass _flightTime>><<endevent>><</link>>'>><<print _fatigueText>>
		<br>
	<</if>>
	<<if $bird.hunts.distanceEast lt 5>>
		<<print '<<link [[East ('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Event]]>><<set $bird.hunts.direction to "east">><<set $bird.hunts.distanceEast++>><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<bird_pass _flightTime>><<endevent>><</link>>'>><<print _fatigueText>>
		<br>
	<</if>>
	<<if $bird.hunts.distanceNorth gt -5>>
		<<print '<<link [[South ('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Event]]>><<set $bird.hunts.direction to "south">><<set $bird.hunts.distanceNorth-->><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<bird_pass _flightTime>><<endevent>><</link>>'>><<print _fatigueText>>
		<br>
	<</if>>
	<<if $bird.hunts.distanceEast gt -5>>
		<<print '<<link [[West ('+_hoursPassed+':'+ (_minutesPassed lt 10 ? "0" : "") + _minutesPassed + ')|Bird Hunt Event]]>><<set $bird.hunts.direction to "west">><<set $bird.hunts.distanceEast-->><<set $fatigueMod to _fatigueMod>><<set $flightTime to _flightTime>><<bird_pass _flightTime>><<endevent>><</link>>'>><<print _fatigueText>>
		<br>
	<</if>>
<</if>>

:: Bird Hunt Event
<<effects>><<flight_distance_check>><<flight_hunt_chance>>
<<if $bird.hunts.duo is true>>
	<<npc "Great Hawk">>
<</if>>
<<if $phase is 2>>
	You ignore your setback and continue.<<set $phase to 0>>
<</if>>
<<if $bird.hunts.goal is "hawk">>
	You follow the <<beasttype>> $bird.hunt.direction, hoping to spot something.
<<else>>
	You <<if $bird.hunts.duo is true>>both <</if>>fly $bird.hunt.direction, hoping to spot something.
<</if>>
<<if $weather is "rain">>The rain does nothing to help your search.<<elseif $weather is "snow">>The snow does nothing to help your search.<</if>>
<br><br>

<<cleareventpool>>
<<if _totalDistance is 0>>
	You're right above the castle. <span class="blue">You won't find anything until you fly further out.</span>
	<br><br>

	<<endevent>>
	<<flight_hunt_options>>
<<else>>

	<<addinlineevent "bird_hunt_nothing" _flight_hunt_chance.nothing>>
		After some time, you still haven't found anything of interest.
		<br><br>

		<<endevent>>
		<<set $phase to 2>>
		<<flight_hunt_options>>
	<</addinlineevent>>

	<<addinlineevent "bird_hunt_camp" _flight_hunt_chance.materials>>
		You notice the remains of a campsite. There might be something worth taking left.
		<br><br>

		<<link [[Search the area (0:05)|Bird Hunt Camp]]>><<bird_pass 5>><</link>>
		<br>
		<<if $bird.hunts.ignored lte 2>>
			<<link [[Ignore|Bird Hunt Ignore]]>><<endevent>><</link>>
			<br>
		<</if>>
	<</addinlineevent>>

	<<runeventpool>>

<</if>>




:: Bird Hunt Camp
<<effects>>
<<if $bird.hunts.duo is true>>
	You and the Great Hawk land and investigate your surroundings.
<<else>>
	You land and investigate your surroundings.
<</if>>
<br><br>

<<if $bird.materials.tools is false and !$bird.hunts.loot.toolbox and ($rng gte 90 or $dateCount.GreatHawkHunts gte 5)>>
	You notice a toolbox on the ground. You look inside it and find a handsaw, hammer and a chisel. These would be useful for improving the tower.
	<br><br>

	<<link [[Take the toolbox|Bird Hunt Camp 2]]>><<set $phase to 1>><</link>>
	<br>
<<elseif $rng gte 20>>
	You notice some firewood was left behind. Most of it has been ruined by the damp atmosphere, but you notice two of the small logs are in good condition.
	<br><br>

	<<set _athlDiffMin to ($bird.hunts.weight * 100)>>
	<<set _athlDiffMax to (_athlDiffMin + 500)>>

	<<if $bird.hunts.duo is true>>
		<<link [[Take the wood|Bird Hunt Camp 2]]>><<set $phase to 2>><</link>>
		<br>
	<<else>>
		<<link [[Take one piece of wood|Bird Hunt Camp 2]]>><<set $phase to 2>><</link>>
		<br>
		<<link [[Try to take two|Bird Hunt Camp 2]]>><<set $phase to 3>><</link>><<athleticsdifficulty _athlDiffMin _athlDiffMax true>>
		<br>
	<</if>>
<<else>>
	You notice large pieces of cloth scattered around. Most of it has been torn. You should be able to make use of it anyway.
	<br><br>

	<<link [[Take random pieces|Bird Hunt Camp 2]]>><<set $phase to 4>><</link>>
	<br>
	<<link [[Look for higher quality pieces|Bird Hunt Camp 2]]>><<set $phase to 5>><</link>><<housekeepingdifficulty 1 200>><<ghousekeeping 200>>
	<br>
<</if>>

:: Bird Hunt Camp 2
<<effects>>

<<switch $phase>>
	<<case 1>>
		You grab the toolbox. It's easy to carry, and light enough for you to fly with it.
		<<if $bird.hunts.duo is true>>
			<<if $monster is 1>>
				"What does <<wife>> want with metal box?" <<bhe>> asks. You explain that it has useful tools. "If <<wife>> says its useful, we take it."
			<<else>>
				The <<beasttype>> looks at you inquisitively. You explain that the box has useful tools. <<bHe>> doesn't seem to actually understand.
			<</if>>
		<</if>>
		<br><br>
		
		<<flight_hunt_get "toolbox" 1>>
		<<flight_hunt_return>>
	<<case 2>>
		<<if $bird.hunts.duo is true>>
			You take a log and instruct the <<beasttype>> to do the same.
			<<if $monster is 1>>
				<<bHe>> takes one in <<bhis>> hand. "Good wood. Strong enough for nest."
			<<else>>
				<<bHe>> grabs the other log in his talons.
			<</if>>
			<br><br>
			
			<<flight_hunt_get "wood" 2>>
			<<flight_hunt_return>>
		<<else>>
			You take a log. It's heavy, but you should still be able to fly.
			<br><br>

			<<flight_hunt_get "wood" 1>>
			<<flight_hunt_return>>
		<</if>>
	<<case 3>>
		<<if $athleticsSuccess>>
			You grab a log in both hands. It's hard to fly with this much extra weight, <span class="green">but you manage it</span>.
			<br><br>
			
			<<flight_hunt_get "wood" 2>>
			<<flight_hunt_return>>
		<<else>>
			<<set _huntFail to 1>>
			You grab a log in both hands. You attempt to fly, <span class="red">but the weight of the logs quickly wear you down</span>. You're forced to let go, and accidentally drop both. You hear a loud crack as the logs land. You'll have to look for something else. <<stress 6>><<tiredness 2>><<gstress>><<gtiredness>>
			<br><br>
			
			<<flight_hunt_return>>
		<</if>>
	<<case 4>>
		You take random pieces of cloth, hoping to be able to use them later.
		<br><br>
			
		<<flight_hunt_get "cloth" random(1, 2)>>
		<<flight_hunt_return>>
	<<case 5>>
		<<if $housekeepingSuccess>>
			You're able to find more usable pieces of cloth, a few sturdy ones catching your eye. You take them with you.
			<<flight_hunt_get "cloth" 3>>
		<<else>>
			Despite your best efforts, you're unable to find much intact cloth. You take the little that you did find.
			<<flight_hunt_get "cloth" 1>>
		<</if>>
		<br><br>

		<<flight_hunt_return>>
<</switch>>



:: Bird Hunt Ignore
<<effects>><<flight_distance_check>>
<<if $bird.hunts.goal is "hawk">>
	<<set $bird.hunts.ignored++>>
	<<npc "Great Hawk">>
	You ask the <<beasttype>> to ignore it and look elsewhere.
	<br><br>

	<<if $bird.hunts.ignored gte 3>>
		<<if $monster is 1>>
			"Wasting time," <<bhe>> says. "After this, no more. We catch what we find next."
		<<else>>
			<<bHe>> screeches, looking at you intensely. <<bHe>> seems to be getting impatient. You won't be able to keep ignoring things.
		<</if>>
	<<else>>
		<<if $monster is 1>>
			"We search again," <<bhe>> says.
		<<else>>
			<<bHe>> screeches in response.
		<</if>>
	<</if>>
<<elseif $bird.hunts.duo is true>>
	The two of you ignore it and choose to look somewhere else.
<<else>>
	You choose to ignore it and look elsewhere.
<</if>>
<br><br>
<<endevent>>
<<flight_hunt_options>>

:: Bird Hunt Return Injured
<<effects>>
<<npc "Great Hawk">><<person1>>
You see the castle, it's not far anymore. Meanwhile, your <<beasttype>> has started to show a slight limp in <<bhis>> wing. You land on the perch. <<bHe>> slowly walks into the nest and lays down.
<br><br>

<<bHe>> closes his wings and tries to find a comfortable position. 
<<if $monster is 1>>
	"Won't be able to hunt for a while," <<bhe>> says. <<bHe>> lets out various grunts of pain, unable to hide the discomfort <<bhe>> feels.
<<else>>
	<<bHe>> makes many noises of discomfort, unable to hide the pain <<bhe>> feels.
<</if>>
<br><br>

<span class="red">You wont be able to hunt with <<bhim>> until <<bhes>> healed.</span>
<br><br>

<<if $bird.hunts.lootAmount is 0>>
	You returned empty-handed, with an injured spouse. Your stomach ties itself in a knot as you feel a creeping shame wash over you. <<trauma 24>><<gggtrauma>>
<<else>>
	<<flight_hunt_loot>>
<</if>>
<br><br>

<<run delete $bird.hunts.duo>>
<<run delete $bird.hunts.goal>>
<<run delete $bird.hunts.weight>>
<<run delete $bird.hunts.direction>>
<<run delete $bird.hunts.distanceNorth>>
<<run delete $bird.hunts.distanceEast>>
<<run delete $bird.hunts.ignored>>
<<set $bird.hunts.injured to 7>>
<<set $bird.timer to 300>>

<<link [[Next|Bird Tower]]>><<endevent>><</link>>
<br>

:: Bird Hunt Return Ask
<<effects>>
<<npc "Great Hawk">><<person1>>
You tell your <<beasttype>> that you want to return to the castle.
<br><br>

<<if $bird.hunts.lootAmount is 0>>
	<<if $monster is 1>>
		"<<Wife>> can go back, but wife will go alone. Still need to hunt."
	<<else>>
		<<bHe>> screeches in response, but does not turn to follow.
	<</if>>
	You fly back to the tower by yourself.
	<<set $bird.hunts.duo to false>>
	<<set $bird.state to "hunting">>
	<<set $bird.timer to 30>>
<<else>>
	<<if $monster is 1>>
		"We hunt well. We can rest," <<bhe>> says.
	<<else>>
		<<bHe>> screeches in response.
	<</if>>
	You begin your return trip.
<</if>>
<br><br>

<<link [[Next|Bird Hunt Return]]>><<endevent>><</link>>
<br>

:: Bird Hunt Return
<<effects>>
<<npc "Great Hawk">><<person1>>
<<if $phase is 1>>
	<<if $bird.hunts.duo is true>>
		You signal to the <<beasttype>> to turn back to the castle. <<bHe>> follows.
	<<else>>
		You begin your return trip.
	<</if>>
<</if>>
Soon, you see the castle again.
<<if $bird.hunts.duo is true>>
	The two of you land back on the perch,
<<else>>
	You land back on the perch,
<</if>>
<<if $bird.hunts.lootAmount is 0>>
	dejected at your failed hunt. <<trauma 12>><<ggtrauma>>
	<br><br>

	<<if $bird.state is "home" and $bird.activity isnot "sleep">>
		<<if $bird.hunts.duo is false>>
			Your <<beasttype>> <<if $monster is 1>>walks<<else>>hops<</if>> over to you.
			<<if $monster is 1>>
				"Glad to see wife return." <<bHe>> notices you didn't bring anything. "Not every hunt is successful," <<bhe>> says, trying to comfort you.
			<<else>>
				<<bHe>> notices you didn't bring anything. <<bHe>> gently nuzzles <<bhis>> beak against you in an attempt to comfort you.
			<</if>>
		<<else>>
			<<if $monster is 1>>
				"Not every hunt is successful," the <<beasttype>> says, trying to comfort you.
			<<else>>
				The <<beasttype>> gently nuzzles <<bhis>> beak against you in an attempt to comfort you.
			<</if>>
		<</if>>
		<<set $bird.timer to 90>>
	<</if>>
<<else>>
	satisfied with a successful hunt.
	<<flight_hunt_loot>>
<</if>>
<br><br>

<<run delete $bird.hunts.duo>>
<<run delete $bird.hunts.goal>>
<<run delete $bird.hunts.weight>>
<<run delete $bird.hunts.direction>>
<<run delete $bird.hunts.distanceNorth>>
<<run delete $bird.hunts.distanceEast>>
<<run delete $bird.hunts.ignored>>

<<link [[Next|Bird Tower]]>><<endevent>><</link>>
<br>





