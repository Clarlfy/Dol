:: Scene Viewer

<h3>Scene Viewer</h3>
<<scenes>>
<<scenesSearch>>
<<scenesViewerCalc>>
<div id="scenesViewer">
	<<scenesViewer>>
</div>
<div id="scenesViewerControls">
	<<scenesViewerControls>>
</div>
<<if $debug is 1>>
	<br>
	<<link [[Reset|$passage]]>><<unset $scenes>><<unset _scenes>><</link>>
<</if>>

<<if $lastPassage>>
	<br>
	<<link [[Exit|$lastPassage]]>><<unset $scenes>><<unset $lastPassage>><</link>>
<</if>>

:: Scene Viewer passages
<<switch $sceneViewSwitch>>
	<<case "halloweenwhitney">><<halloweenwhitney>>
	<<case "halloweenkylar">><<halloweenkylar>>
	<<default>>
		Error occured in scene viewer. <<print $replayScene.name>>. Please report.
		<br><br>
		<<set _exitpassage to clone($replayScene.exitpassage)>>
		<<unset $replayScene>>
		<<unfreezePlayerStats>>
		<<link [[Back|_exitpassage]]>>
		<</link>>
<</switch>>
<<unset $sceneViewSwitch>>

:: Scene Viewer Widgets [widget]

<<widget "setupReplayScene">>
<<set _passages to []>>
<<if Array.isArray($args[2])>>
	<<set _passages to $args[2]>>
<</if>>
<<set _variablesToRestore to []>>
<<if Array.isArray($args[3])>>
	<<set _variablesToRestore to $args[3]>>
<</if>>
<<freezePlayerStats _variablesToRestore>>
<<set $replayScene to {
	name: $args[0],
	startPassage: $args[1],
	passages: _passages,
	exitpassage: $passage
}>>
<</widget>>

/*Scenes when player viewing cant be tracked*/
<<widget "seenPassage">>
<<if $scenePassages is undefined>>
	<<set $scenePassages to []>>
<</if>>
<<run $scenePassages.pushUnique($passage)>>
<</widget>>

/*Scenes when player viewing can be tracked*/
<<widget "seenPassageChecks">>
<<if $scenePassages is undefined>>
	<<set $scenePassages to []>>
<</if>>
<<if $NPCName[$NPCNameList.indexOf('Avery')].init is 1>>
	<<run $scenePassages.pushUnique("Park Lichen")>>
<</if>>
<<if Object.keys($feats.allSaves).includes("Head Chief")>>
	<<run $scenePassages.pushUnique("Chef Opening")>>
<</if>>
<<if $schoolevent gte 1>>
	<<run $scenePassages.pushUnique("Penis School Inspection")>>
<</if>>
<<if $schoolevent gte 2>>
	<<run $scenePassages.pushUnique("Pussy School Inspection")>>
<</if>>
<<if $schoolevent gte 3>>
	<<run $scenePassages.pushUnique("Breast School Inspection")>>
<</if>>
<<if $halloween_whitney_proposed>>
	<<run $scenePassages.pushUnique("halloweenwhitney")>>
<</if>>
<<if $halloween_kylar_proposed>>
	<<run $scenePassages.pushUnique("halloweenkylar")>>
<</if>>
<</widget>>

<<widget "scenes">>
/*Be extra careful when adding new scenes, make sure that any variables that shouldn't be changed this way, are restored right after
The widgets `<<freezePlayerStats>>` and `<<unfreezePlayerStats>>` can help here alongside `variablesToRestore` for more scene specific variables
The variable $statFreeze to prevent other widgets from running
Be aware that many objects will be restored for you, including player, worn, carried, wardrobe, sexStats, dateCount and named npc's
*/
<<if $scenePassages is undefined>>
	<<set $scenePassages to []>>
<</if>>
<<if $scenes is undefined>>
	<<seenPassageChecks>>
	<<set $scenes to {
		/*"placeHolder":{
			name:"",
			startPassage:"",
			passages:["",""],
			manualVariableChanges:"",
			unlocked: ($scenePassages.includes("startPassage") ? true : false),
			variablesToRestore: []
		},*/
		"AveryParkIntroduction":{
			name:"Avery Park Introduction",
			startPassage:"Park Lichen",
			passages: ["Park Lichen","Park Lichen Climb","Park Lichen Help","Park Lichen Explain","Park Lichen Run","Park Lichen Honest","Park Lichen Evasive","Park Lichen Accept","Park Lichen Refuse","Park Lichen Smooch","Park Lichen Still","Park Lichen Move"],
			manualVariableChanges: "<<set $NPCName[$NPCNameList.indexOf('Avery')].init to 0>>",
			unlocked: ($scenePassages.includes("Park Lichen") ? true : false),
			variablesToRestore: ["sciencelichenpark"]
		},
		"ChefOpeningCeremony":{
			name:"Chef Opening Ceremony",
			startPassage:"Chef Opening",
			passages:["Chef Opening","Chef Opening 2","Chef Opening 3","Chef Opening Current","Chef Opening Gown","Chef Opening Tuxedo","Chef Opening 4","Chef Opening 5","Chef Opening Avery Accept","Chef Opening Avery Refuse","Chef Opening 6","Chef Opening Bailey Slap","Chef Opening Bailey Thank","Chef Opening Bailey Silent","Chef Opening 7","Chef Opening Smile","Chef Opening Funny","Chef Opening Refuse Photograph","Chef Opening 8","Chef Opening 9","Chef Opening 10","Chef Opening 11","Chef Opening Truth","Chef Opening Bailey","Chef Opening Sam","Chef Opening Self","Chef Opening Refuse","Chef Opening Local","Chef Opening Foreign","Chef Opening Staff","Chef Opening Enjoy","Chef Opening End","Chef Opening End 2"],
			manualVariableChanges:"",
			unlocked: ($scenePassages.includes("Chef Opening") ? true : false),
			variablesToRestore: ["chef_speech","bun_value"],
		},
		"PenisSchoolInspection":{
			name:"Penis School Inspection",
			startPassage:"Science Lesson",
			passages:["Penis Inspection","Penis Inspection 2","Penis Inspection Expose","Penis Inspection Flaunt","Penis Inspection Run Away","Penis Inspection End","Penis Inspection Flaunt Crossdress"],
			manualVariableChanges:"<<set $minute to 1>><<set $schoolevent to 0>><<set $schooleventtimer to 0>><<set $weekday to 2>>",
			unlocked: ($scenePassages.includes("Penis School Inspection") ? true : false),
			variablesToRestore: ["scienceattended","schoolevent","schooleventtimer"]
		},
		"PussySchoolInspection":{
			name:"Pussy School Inspection",
			startPassage:"Science Lesson",
			passages:["Pussy Inspection","Pussy Inspection End","Pussy Inspection2","Pussy Inspection Run","Pussy Inspection Penis","Pussy Inspection Comply","Pussy Inspection Flaunt"],
			manualVariableChanges:"<<set $minute to 1>><<set $schoolevent to 1>><<set $schooleventtimer to 0>><<set $weekday to 2>>",
			unlocked: ($scenePassages.includes("Pussy School Inspection") ? true : false),
			variablesToRestore: ["scienceattended","schoolevent","schooleventtimer"]
		},
		"BreastSchoolInspection":{
			name:"Breast School Inspection",
			startPassage:"Science Lesson",
			passages:["Breast Inspection","Breast Inspection Comply","Breast Inspection Flaunt","Breast Inspection Flat Flaunt","Breast Inspection Protest","Breast Inspection End"],
			manualVariableChanges:"<<set $minute to 1>><<set $schoolevent to 2>><<set $schooleventtimer to 0>><<set $weekday to 2>>",
			unlocked: ($scenePassages.includes("Breast School Inspection") ? true : false),
			variablesToRestore: ["scienceattended","schoolevent","schooleventtimer"]
		},
		"HalloweenWhitney":{
			name:"Halloween Whitney",
			startPassage:"Scene Viewer passages",
			passages:["Whitney Trick 1","Whitney Trick 2","Whitney Trick Refuse","Whitney Trick 2","Whitney Trick Refuse 2","Whitney Trick 3","Whitney Trick 4","Whitney Trick Stop","Whitney Trick Watch","Whitney Trick 5","Whitney Trick 6","Whitney Trick Exhibitionism","Whitney Trick Drink","Whitney Trick Drink","Whitney Trick Sex","Whitney Trick Sex Refuse","Whitney Trick 7","Whitney Trick Sex Finish"],
			manualVariableChanges:"<<set $sceneViewSwitch to 'halloweenwhitney'>>",
			unlocked: ($scenePassages.includes("halloweenwhitney") ? true : false),
			variablesToRestore: ["$halloween_whitney_proposed","halloween_trick_NPC"]
		},
		"HalloweenKylar":{
			name:"Halloween Kylar",
			startPassage:"Scene Viewer passages",
			passages:["Kylar Halloween Look","Kylar Halloween Watch","Kylar Halloween","Kylar Halloween Refuse","Kylar Halloween Walk","Kylar Halloween Hesitate","Kylar Halloween Forest Refuse","Kylar Halloween Continue","Kylar Halloween Angry","Kylar Halloween Continue Walk","Kylar Halloween Leave","Kylar Halloween March","Kylar Halloween Kiss","Kylar Halloween Yes","Kylar Halloween No","Kylar Halloween Town","Kylar Halloween Sex","Kylar Halloween Sex Finish","Kylar Halloween Mansion","Kylar Halloween Mansion 2","Kylar Halloween Known Drink","Kylar Halloween Unknown Refuse","Kylar Halloween Known Angry","Kylar Halloween Unknown Drink","Kylar Halloween Known Pretend","Kylar Halloween Known Hand","Kylar Halloween Known Go","Kylar Halloween Known Scare","Kylar Halloween Mansion Sex","Kylar Halloween Mansion Sex Finish","Kylar Halloween Exit","Kylar Halloween Known Chase","Kylar Halloween Known Curtain","Kylar Halloween Known Sheet","Kylar Halloween Known Front","Kylar Halloween Known Dumb","Kylar Halloween Known Clean","Kylar Halloween Known Kiss","Kylar Halloween Known Stand","Kylar Halloween Known Sex","Kylar Halloween Known Sex Finish","Kylar Halloween Rough Exit","Kylar Halloween Unknown Refuse 2","Kylar Halloween Exit 2","Kylar Halloween Skulduggery 2","Kylar Halloween Pick","Kylar Halloween Upstairs","Kylar Halloween Skulduggery","Kylar Halloween Skulduggery Kiss","Kylar Halloween Skulduggery Pull","Kylar Halloween Upstairs Dodge","Kylar Halloween Caught","Kylar Halloween Upstairs Applaud","Kylar Halloween Upstairs Angry","Kylar Halloween Kneel","Kylar Halloween Kneel Refuse","Kylar Halloween Kneel Refuse 2","Kylar Halloween Kneel Run","Kylar Halloween Kneel Help","Kylar Halloween Kneel Spray","Kylar Halloween Forced Kneel","Kylar Halloween Oral","Kylar Halloween Lick","Kylar Halloween Lick Refuse","Kylar Halloween Lick Refuse 2","Kylar Halloween End","Kylar Halloween Oral Finish","Kylar Halloween Bed","Kylar Halloween Bed 2","Kylar Halloween Bed 3","Kylar Halloween Bed 4","Kylar Halloween Bed 5","Kylar Halloween Wait","Kylar Halloween Warn","Kylar Halloween Escape","Kylar Halloween Tricks","Kylar Halloween Whitney","Kylar Halloween Accompany","Kylar Halloween Alone","Kylar Halloween Thank","Kylar Halloween Ask","Kylar Halloween Whitney Kiss","Kylar Halloween Whitney Apologise","Kylar Halloween Whitney Silent"],
			manualVariableChanges:"<<set $sceneViewSwitch to 'halloweenkylar'>>",
			unlocked: ($scenePassages.includes("halloweenkylar") ? true : false),
			variablesToRestore: ["halloween_kylar_proposed"]
		},
	}>>
<</if>>
<</widget>>

<<widget "scenesSearch">>
	Scenes per page (Click search to update): <<numberslider "_itemsPerPage" "10" 5 40 5>>
	<br><br>
	Search: <<textbox "_sceneSearch" "">>
	<<link Search>>
		<<set _sceneSearch to _sceneSearch.replace(/[^a-zA-Z 0-9]+/g,"")>>
		<<set _listPage to 1>>
		<<updateSceneViewer>>
	<</link>>
	<br><br>
<</widget>>

<<widget "scenesViewerCalc">>
<<if _sceneSearch.length is 0>>
	<<set _scenes to clone($scenes)>>
<<else>>
	<<set _scenes to {}>>
	<<for _label, _value range $scenes>>
		<<set _lowerName to clone(_value.name).toLowerCase()>>
		<<set _lowerPassages to "".concat(_value.startPassage).toLowerCase()>>
		<<if _value.name.toLowerCase().includes(_sceneSearch.toLowerCase()) or "".concat(_value.startPassage).toLowerCase().includes(_sceneSearch.toLowerCase())>>
			<<run _scenes[_label] to clone(_value)>>
		<</if>>
	<</for>>
<</if>>
<<set _keys to Object.keys(_scenes)>>
<<set _keys to _keys.sort()>>
<<set _scenesAvaliable to _keys.length gt 0>>
<<if _listPage is undefined>>
	<<set _listPage to 1>>
<</if>>
<<set _listMaxItems to _itemsPerPage>>
<<set _listPageMax to Math.ceil(_keys.length / _listMaxItems)>>
<<set _indexStart to ((_listPage - 1) * _listMaxItems)>>
<<set _indexEnd to (_indexStart + _listMaxItems gt _keys.length ? _keys.length : _indexStart + _listMaxItems)>>
<</widget>>

<<widget "scenesViewer">>
<<if _scenesAvaliable>>
	<<for _i to _indexStart; _i lt _indexEnd; _i++>>
		<<set _item to _scenes[_keys[_i]]>>
		<<if _item.unlocked is false and $debug is 0>>
			<span class="no-numberify red">
				Locked
			</span>
		<<elseif _item.name is undefined or _item.startPassage is undefined or _item.passages is undefined>>
			<span class="no-numberify red">
				Error in key '<<print _keys[_i]>>'.
			</span>
		<<else>>
			<<capture _item>>
				<span class="no-numberify">
					<<link [[_item.name + " | " + _item.startPassage|_item.startPassage]]>><<setupReplayScene _item.name _item.startPassage _item.passages _item.variablesToRestore>><<print _item.manualVariableChanges>><</link>>
				</span>
			<</capture>>
		<</if>>
	<</for>>
<<else>>
	No Scenes Found.
<</if>>
<</widget>>

<<widget "scenesViewerControls">>
<<set _disabled = _listPage > 1 ? "" : "disabled">>
<div @class="'div-link btn-pagination prev ' + _disabled">
	<<link "Previous">>
		<<if _listPage > 1>>
			<<set _listPage -= 1>>
			<<updateSceneViewer>>
		<</if>>
	<</link>>
	<div class="btn-pagination-arrow">&lt;</div>
</div>
<div>
	<<print (_listPage) + " out of " + _listPageMax>>
</div>
<<set _disabled = _listPage < _listPageMax ? "" : "disabled">>
<div @class="'div-link btn-pagination next ' + _disabled">
	<<link "Next">>
		<<if _listPage < _listPageMax>>
			<<set _listPage += 1>>
			<<updateSceneViewer>>
		<</if>>
	<</link>>
	<div class="btn-pagination-arrow">&gt;</div>
</div>
<<run linkifyDivs('#scenesViewerControls')>>
<</widget>>

<<widget "updateSceneViewer">>
	<<scenesViewerCalc>>
	<<replace "#scenesViewer">><<scenesViewer>><</replace>>
	<<replace "#scenesViewerControls">><<scenesViewerControls>><</replace>>
<</widget>>