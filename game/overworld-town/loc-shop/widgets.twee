:: Widgets Shop [widget]

/*First argument - bought or stolen
Second argument - worn or send
Third argument - item index*/

<<widget "uppershopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0]>><<ShowUnderEquip>><</if>>
<<if $args[0] is "buy">>
	You buy the <<print setup.clothes.upper[_shop_temp].name>>.
	<br><br>
<<elseif $args[0] is "steal">>
	You steal the <<print setup.clothes.upper[_shop_temp].name>>.
	<br><br>
<<elseif $args[0] is "try">>
	<<tryOnWear _shop_temp "upper">>
<<elseif $args[0] is "return">>
	<<clothingReset "upper">>
<<elseif $args[0] is "reset">>
	<<unset $colouraction>>
	<<unset $accessorycolouraction>>
	<<set $shopDefaults.colorSet to null>>
	<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
			<<upperwear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
			<<upperwear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
			<<upperwear _shop_temp $accessorycolouraction>>
		<<else>>
			<<upperwear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "upper">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
				<<uppersend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
				<<uppersend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
				<<uppersend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
				<<uppersend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "outfitshop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.upper[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.upper[$clothes_choice].name>>. <<if setup.clothes.upper[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.upper[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.upper[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.upper[$clothes_choice].cost / 100>>.</span>
<br><br>

<<shoptraits>>
<br>
	<<if $willpower gte 800 or _temp_choice.reveal gte 500 or _temp_choice.type.includesAny("school", "event") or $corruption_slime lt 80>>
		<<if setup.clothes.upper[$clothes_choice].colour_options.length isnot 0>>
			There's a range of colours to choose from:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
				<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
					<<set $colouraction to $shopDefaults.color>>
					<<set $shopDefaults.colorSet to $shopDefaults.color>>
				<</if>>
				<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
			<br><br>
		<</if>>

		<<if setup.clothes.upper[$clothes_choice].accessory_colour_options.length isnot 0>>
			Secondary colour:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
				<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
					<<set $accessorycolouraction to $shopDefaults.secColor>>
					<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
				<</if>>
				<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
			<br><br>
		<</if>>
		<<if setup.clothes.upper[$clothes_choice].colour_options.length isnot 0 or setup.clothes.upper[$clothes_choice].accessory_colour_options.length isnot 0>>
			<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
			<br>
			<<shopCustomColors>>
		<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "upper" $clothes_choice>></div>
			<br>
		<</if>>
		<<shopBuyItemStatus "upper" setup.clothes.upper[$clothes_choice].name true>>
		<<set _cost to clone(setup.clothes.upper[$clothes_choice].cost)>>
		<<if $wardrobe.upper.length gte $wardrobe.space>>
			<span class="blue">Your wardrobe is full. <i>$wardrobe.upper.length / $wardrobe.space</i></span>
			<br>
		<<elseif $daystate is "night">>
			<<if $worn.upper.cursed is 1 or $worn.lower.cursed is 1>>
				<span class="blue">You can't wear this item without first removing your <<if $worn.upper.cursed is 1>>$worn.upper.name<<else>>$worn.lower.name<</if>>.</span>
				<br>
			<<else>>
				<<link [[Steal and wear|$passage]]>><<uppershopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
				<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<uppershopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.upper[$clothes_choice].cost>>
			<<if $worn.upper.cursed is 1 or $worn.lower.cursed is 1>>
				<span class="blue">You can't wear this item without first removing your <<if $worn.upper.cursed is 1>>$worn.upper.name<<else>>$worn.lower.name<</if>></span>
				<br>
			<<else>>
				<<link [[Buy and wear|$passage]]>><<clothingReset "upper">><<uppershopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
				<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "upper">><<uppershopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>><<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.upper[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "upper">><<uppershopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>><<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
			<span class="pink">You cannot afford this item.</span>
			<br>
		<</if>>
		<<if $worn.upper.cursed is 1 or $worn.lower.cursed is 1>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<uppershopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.upper isnot null>>
				<<link [[Return|$passage]]>><<uppershopbuy "return" null $clothes_choice>><</link>>
				<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
		<br>
	<</if>>
<</if>>
<br>

<<if $location is "forest">>
<<outfitforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.upper.length; _i++>>
		<<if setup.clothes.upper[_i].shop.includes("clothing") and setup.clothes.upper[_i].one_piece is 1>>
			<<clothingicon setup.clothes.upper[_i]>><<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.upper[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>
<</nobr>><</widget>>

<<widget "uppershop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.upper[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.upper[$clothes_choice].name>>. <<if setup.clothes.upper[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.upper[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.upper[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.upper[$clothes_choice].cost / 100>>.</span>
<br><br>

	<<shoptraits>>
        <br>
	<<if $willpower gte 800 or _temp_choice.reveal gte 500 or _temp_choice.type.includesAny("school", "event") or $corruption_slime lt 80>>
		<<if setup.clothes.upper[$clothes_choice].colour_options.length isnot 0>>
			There's a range of colours to choose from:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
				<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
					<<set $colouraction to $shopDefaults.color>>
					<<set $shopDefaults.colorSet to $shopDefaults.color>>
				<</if>>
				<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>

		<<if setup.clothes.upper[$clothes_choice].accessory_colour_options.length isnot 0>>
			Secondary colour:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
				<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
					<<set $accessorycolouraction to $shopDefaults.secColor>>
					<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
				<</if>>
				<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>
		<<if setup.clothes.upper[$clothes_choice].colour_options.length isnot 0 or setup.clothes.upper[$clothes_choice].accessory_colour_options.length isnot 0>>
			<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
			<br>
			<<shopCustomColors>>
		<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "upper" $clothes_choice>></div>
			<br>
		<</if>>
		<<shopBuyItemStatus "upper" setup.clothes.upper[$clothes_choice].name>>
		<<set _cost to clone(setup.clothes.upper[$clothes_choice].cost)>>
		<<if $wardrobe.upper.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.upper.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.upper.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.upper.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<uppershopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<uppershopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.upper[$clothes_choice].cost>>
			<<if $worn.upper.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.upper.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "upper">><<uppershopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "upper">><<uppershopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.upper[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "upper">><<uppershopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.upper.cursed is 1>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<uppershopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.upper isnot null>>
			<<link [[Return|$passage]]>><<uppershopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
		<br>
	<</if>>
<</if>>
<br>

<<if $location is "forest">>
<<upperforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.upper.length; _i++>>
		<<if setup.clothes.upper[_i].shop.includes("clothing") and setup.clothes.upper[_i].one_piece isnot 1>>
			<<clothingicon setup.clothes.upper[_i]>><<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.upper[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>
<</nobr>><</widget>>

<<widget "lowershopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0]>><<ShowUnderEquip>><</if>>
<<if $args[0] is "buy">>
You buy the <<print setup.clothes.lower[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.lower[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "lower">>
<<elseif $args[0] is "return">>
<<clothingReset "lower">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<lowerwear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<lowerwear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<lowerwear _shop_temp $accessorycolouraction>>
		<<else>>
		<<lowerwear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "lower">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<lowersend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<lowersend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<lowersend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<lowersend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "lowershop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.lower[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.lower[$clothes_choice].name>>. <<if setup.clothes.lower[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.lower[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.lower[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.lower[$clothes_choice].cost / 100>>.</span>
<br><br>

	<<shoptraits>>
        <br>
	<<if $willpower gte 800 or _temp_choice.reveal gte 500 or _temp_choice.type.includesAny("school", "event") or $corruption_slime lt 80>>
		<<if setup.clothes.lower[$clothes_choice].colour_options.length isnot 0>>
			There's a range of colours to choose from:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
				<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
					<<set $colouraction to $shopDefaults.color>>
					<<set $shopDefaults.colorSet to $shopDefaults.color>>
				<</if>>
				<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>

		<<if setup.clothes.lower[$clothes_choice].accessory_colour_options.length isnot 0>>
			Secondary colour:
			<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
				<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
					<<set $accessorycolouraction to $shopDefaults.secColor>>
					<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
				<</if>>
				<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>
		<<if setup.clothes.lower[$clothes_choice].colour_options.length isnot 0 or setup.clothes.lower[$clothes_choice].accessory_colour_options.length isnot 0>>
			<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
			<br>
			<<shopCustomColors>>
		<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "lower" $clothes_choice>></div>
			<br>
		<</if>>
		<<shopBuyItemStatus "lower" setup.clothes.lower[$clothes_choice].name>>
		<<set _cost to clone(setup.clothes.lower[$clothes_choice].cost)>>
		<<if $wardrobe.lower.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.lower.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.lower.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.lower.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<lowershopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<lowershopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.lower[$clothes_choice].cost>>
			<<if $worn.lower.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.lower.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "lower">><<lowershopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "lower">><<lowershopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.lower[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "lower">><<lowershopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.lower.cursed is 1>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<lowershopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.lower isnot null>>
			<<link [[Return|$passage]]>><<lowershopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
		<br>
	<</if>>
<</if>>
<br>
<<if $location is "forest">>
	<<lowerforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.lower.length; _i++>>
		<<if setup.clothes.lower[_i].shop.includes("clothing") and setup.clothes.lower[_i].one_piece isnot 1>>
			<<clothingicon setup.clothes.lower[_i]>><<print '<<link [['+setup.clothes.lower[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.lower[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.lower[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.lower[_i].cost / 100>>.</span>
			<<if setup.clothes.lower[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.lower[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "underuppershopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0] is "buy">>
You buy the <<print setup.clothes.under_upper[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.under_upper[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "under_upper">>
<<elseif $args[0] is "return">>
<<clothingReset "under_upper">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<underupperwear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<underupperwear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<underupperwear _shop_temp $accessorycolouraction>>
		<<else>>
		<<underupperwear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "under_upper">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<underuppersend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<underuppersend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<underuppersend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<underuppersend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "underoutfitshop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.under_upper[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.under_upper[$clothes_choice].name>>. <<if setup.clothes.under_upper[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.under_upper[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.under_upper[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.under_upper[$clothes_choice].cost / 100>>.</span>
<br><br>

	<<shoptraits>>
        <br>
	<<if $willpower gte 800 or _temp_choice.reveal gte 500 or _temp_choice.type.includesAny("school", "event") or $corruption_slime lt 80>>
		<<if setup.clothes.under_upper[$clothes_choice].colour_options.length isnot 0>>
		There's a range of colours to choose from:
		<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
				<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
					<<set $colouraction to $shopDefaults.color>>
					<<set $shopDefaults.colorSet to $shopDefaults.color>>
				<</if>>
				<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>

		<<if setup.clothes.under_upper[$clothes_choice].accessory_colour_options.length isnot 0>>
		Secondary colour:
		<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
				<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
					<<set $accessorycolouraction to $shopDefaults.secColor>>
					<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
				<</if>>
				<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>
		<<if setup.clothes.under_upper[$clothes_choice].colour_options.length isnot 0 or setup.clothes.under_upper[$clothes_choice].accessory_colour_options.length isnot 0>>
			<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
			<br>
			<<shopCustomColors>>
		<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "under_upper" $clothes_choice>></div>
			<br>
		<</if>>
		<<shopBuyItemStatus "under_upper" setup.clothes.under_upper[$clothes_choice].name true>>
		<<set _cost to clone(setup.clothes.under_upper[$clothes_choice].cost)>>
		<<if $wardrobe.under_upper.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.under_upper.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night">>
			<<if $worn.under_upper.cursed is 1 or $worn.under_lower.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your <<if $worn.under_upper.cursed is 1>>$worn.under_upper.name<<else>>$worn.under_lower.name<</if>>.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<underuppershopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<underuppershopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.under_upper[$clothes_choice].cost>>
			<<if $worn.under_upper.cursed is 1 or $worn.under_lower.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your <<if $worn.under_upper.cursed is 1>>$worn.under_upper.name<<else>>$worn.under_lower.name<</if>>.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "under_upper">><<underuppershopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "under_upper">><<underuppershopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.under_upper[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "under_upper">><<underuppershopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.under_upper.cursed is 1 or $worn.under_lower.cursed is 1>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<underuppershopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.under_upper isnot null>>
			<<link [[Return|$passage]]>><<underuppershopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
		<br>
	<</if>>
<</if>>
<br>
<<for _i to 0; _i lt setup.clothes.under_upper.length; _i++>>
	<<if setup.clothes.under_upper[_i].shop.includes("clothing") and setup.clothes.under_upper[_i].one_piece is 1>>
		<<clothingicon setup.clothes.under_upper[_i]>><<print '<<link [['+setup.clothes.under_upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.under_upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.under_upper[' + _i + '].integrity_max)>><</link>>'>>
		| <span class="teal">£<<print setup.clothes.under_upper[_i].cost / 100>>.</span>
			<<if setup.clothes.under_upper[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.under_upper[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
	<br>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "underuppershop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.under_upper[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.under_upper[$clothes_choice].name>>. <<if setup.clothes.under_upper[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.under_upper[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.under_upper[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.under_upper[$clothes_choice].cost / 100>>.</span>
<br><br>

	<<shoptraits>>
        <br>
	<<if $willpower gte 800 or _temp_choice.reveal gte 500 or _temp_choice.type.includesAny("school", "event") or $corruption_slime lt 80>>
		<<if setup.clothes.under_upper[$clothes_choice].colour_options.length isnot 0>>
		There's a range of colours to choose from:
		<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
				<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
					<<set $colouraction to $shopDefaults.color>>
					<<set $shopDefaults.colorSet to $shopDefaults.color>>
				<</if>>
				<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>

		<<if setup.clothes.under_upper[$clothes_choice].accessory_colour_options.length isnot 0>>
		<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
				<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
					<<set $accessorycolouraction to $shopDefaults.secColor>>
					<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
				<</if>>
				<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>
		<<if setup.clothes.under_upper[$clothes_choice].colour_options.length isnot 0 or setup.clothes.under_lower[$clothes_choice].accessory_colour_options.length isnot 0>>
			<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
			<br>
			<<shopCustomColors>>
		<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "under_upper" $clothes_choice>></div>
			<br>
		<</if>>
		<<shopBuyItemStatus "under_upper" setup.clothes.under_upper[$clothes_choice].name>>
		<<set _cost to clone(setup.clothes.under_upper[$clothes_choice].cost)>>
		<<if $wardrobe.under_upper.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.under_upper.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.under_upper.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.under_upper.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<underuppershopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<underuppershopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.under_upper[$clothes_choice].cost>>
			<<if $worn.under_upper.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.under_upper.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "under_upper">><<underuppershopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "under_upper">><<underuppershopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.under_upper[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "under_upper">><<underuppershopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.under_upper.cursed>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<underuppershopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.under_upper isnot null>>
			<<link [[Return|$passage]]>><<underuppershopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
		<br>
	<</if>>
<</if>>
<br>
<<for _i to 0; _i lt setup.clothes.under_upper.length; _i++>>
	<<if setup.clothes.under_upper[_i].shop.includes("clothing") and setup.clothes.under_upper[_i].one_piece isnot 1>>
		<<clothingicon setup.clothes.under_upper[_i]>><<print '<<link [['+setup.clothes.under_upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.under_upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.under_upper[' + _i + '].integrity_max)>><</link>>'>>
		| <span class="teal">£<<print setup.clothes.under_upper[_i].cost / 100>>.</span>
		<<if setup.clothes.under_upper[_i].gender is "m">>
			 | <span class="blue">♂</span>
		<<elseif setup.clothes.under_upper[_i].gender is "f">>
			 | <span class="pink">♀</span>
		<</if>>
	<br>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "underlowershopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0] is "buy">>
You buy the <<print setup.clothes.under_lower[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.under_lower[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "under_lower">>
<<elseif $args[0] is "return">>
<<clothingReset "under_lower">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<underlowerwear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<underlowerwear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<underlowerwear _shop_temp $accessorycolouraction>>
		<<else>>
		<<underlowerwear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "under_lower">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<underlowersend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<underlowersend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<underlowersend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<underlowersend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "underlowershop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.under_lower[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.under_lower[$clothes_choice].name>>. <<if setup.clothes.under_lower[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.under_lower[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.under_lower[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.under_lower[$clothes_choice].cost / 100>>.</span>
<br><br>

	<<shoptraits>>
        <br>
	<<if $willpower gte 800 or _temp_choice.reveal gte 500 or _temp_choice.type.includesAny("school", "event") or $corruption_slime lt 80>>
	<<if setup.clothes.under_lower[$clothes_choice].colour_options.length isnot 0>>
		There's a range of colours to choose from:
		<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
				<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
					<<set $colouraction to $shopDefaults.color>>
					<<set $shopDefaults.colorSet to $shopDefaults.color>>
				<</if>>
				<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>

		<<if setup.clothes.under_lower[$clothes_choice].accessory_colour_options.length isnot 0>>
		Secondary colour:
		<br>
			<<set _setChecked to false>>
			<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
				<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
					<<set $accessorycolouraction to $shopDefaults.secColor>>
					<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
				<</if>>
				<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
					<<set _setChecked to true>>
				<<else>>
					<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
				<</if>>
			<</for>>
		<br><br>
		<</if>>
		<<if setup.clothes.under_lower[$clothes_choice].colour_options.length isnot 0 or setup.clothes.under_lower[$clothes_choice].accessory_colour_options.length isnot 0>>
			<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
			<br>
			<<shopCustomColors>>
		<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "under_lower" $clothes_choice>></div>
			<br>
		<</if>>
		<<shopBuyItemStatus "under_lower" setup.clothes.under_lower[$clothes_choice].name>>
		<<set _cost to clone(setup.clothes.under_lower[$clothes_choice].cost)>>
		<<if $wardrobe.under_lower.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.under_lower.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.under_lower.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.under_lower.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<underlowershopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<underlowershopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.under_lower[$clothes_choice].cost>>
			<<if $worn.under_lower.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.under_lower.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "under_lower">><<underlowershopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<underlowershopbuy "buy" "send" $clothes_choice 1>><<clothingReset "under_lower">><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.under_lower[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<underlowershopbuy "buy" "send" $clothes_choice 5>><<clothingReset "under_lower">><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.under_lower.cursed>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<underlowershopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.under_lower isnot null>>
			<<link [[Return|$passage]]>><<underlowershopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
	<<else>>
		<span class="red">The slime in your ear refuses to allow you to try on or buy the _temp_choice.name.</span>
		<br>
	<</if>>
<</if>>
<br>
<<if $location is "forest">>
<<underlowerforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.under_lower.length; _i++>>
		<<if setup.clothes.under_lower[_i].shop.includes("clothing") and setup.clothes.under_lower[_i].one_piece isnot 1>>
			<<clothingicon setup.clothes.under_lower[_i]>><<print '<<link [['+setup.clothes.under_lower[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.under_lower[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.under_lower[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.under_lower[_i].cost / 100>>.</span>
			<<if setup.clothes.under_lower[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.under_lower[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "headshopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0] is "buy">>
You buy the <<print setup.clothes.head[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.head[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "head">>
<<elseif $args[0] is "return">>
<<clothingReset "head">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<headwear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<headwear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<headwear _shop_temp $accessorycolouraction>>
		<<else>>
		<<headwear _shop_temp>>
		<</if>>
	<</if>>
<<updateOwned "head">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<headsend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<headsend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<headsend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<headsend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "headshop">><<nobr>>

<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.head[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.head[$clothes_choice].name>>. <<if setup.clothes.head[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.head[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.head[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.head[$clothes_choice].cost / 100>>.</span>
<br><br>

<<shoptraits>>
<br>

	<<if setup.clothes.head[$clothes_choice].colour_options.length isnot 0>>
	There's a range of colours to choose from:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
			<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
				<<set $colouraction to $shopDefaults.color>>
				<<set $shopDefaults.colorSet to $shopDefaults.color>>
			<</if>>
			<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>

	<<if setup.clothes.head[$clothes_choice].accessory_colour_options.length isnot 0>>
	Secondary colour:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
			<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
				<<set $accessorycolouraction to $shopDefaults.secColor>>
				<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
			<</if>>
			<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>

	<</if>>
	<<if setup.clothes.head[$clothes_choice].colour_options.length isnot 0 or setup.clothes.head[$clothes_choice].accessory_colour_options.length isnot 0>>
		<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
		<br>
		<<shopCustomColors>>
	<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "head" $clothes_choice>></div>
			<br>
		<</if>>
	<<shopBuyItemStatus "head" setup.clothes.head[$clothes_choice].name>>
	<<set _cost to clone(setup.clothes.head[$clothes_choice].cost)>>
		<<if $wardrobe.head.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.head.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.head.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.head.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<headshopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<headshopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.head[$clothes_choice].cost>>
			<<if $worn.head.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.head.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "head">><<headshopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "head">><<headshopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.head[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "head">><<headshopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.head.cursed>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<headshopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.head isnot null>>
			<<link [[Return|$passage]]>><<headshopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
<</if>>
<br>
<<if $location is "forest">>
<<headforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.head.length; _i++>>
		<<if setup.clothes.head[_i].shop.includes("clothing")>>
			<<clothingicon setup.clothes.head[_i]>><<print '<<link [['+setup.clothes.head[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.head[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.head[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.head[_i].cost / 100>>.</span>
			<<if setup.clothes.head[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.head[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "faceshopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0] is "buy">>
You buy the <<print setup.clothes.face[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.face[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "face">>
<<elseif $args[0] is "return">>
<<clothingReset "face">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<facewear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<facewear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<facewear _shop_temp $accessorycolouraction>>
		<<else>>
		<<facewear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "face">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<facesend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<facesend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<facesend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<facesend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "faceshop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.face[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.face[$clothes_choice].name>>. <<if setup.clothes.face[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.face[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.face[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.face[$clothes_choice].cost / 100>>.</span>
<br><br>

<<shoptraits>>
<br>

	<<if setup.clothes.face[$clothes_choice].colour_options.length isnot 0>>
	There's a range of colours to choose from:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
			<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
				<<set $colouraction to $shopDefaults.color>>
				<<set $shopDefaults.colorSet to $shopDefaults.color>>
			<</if>>
			<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>

	<<if setup.clothes.face[$clothes_choice].accessory_colour_options.length isnot 0>>
	Secondary colour:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
			<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
				<<set $accessorycolouraction to $shopDefaults.secColor>>
				<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
			<</if>>
			<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>
	<<if setup.clothes.face[$clothes_choice].colour_options.length isnot 0 or setup.clothes.face[$clothes_choice].accessory_colour_options.length isnot 0>>
		<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
		<br>
		<<shopCustomColors>>
	<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "face" $clothes_choice>></div>
			<br>
		<</if>>
	<<shopBuyItemStatus "face" setup.clothes.face[$clothes_choice].name>>
	<<set _cost to clone(setup.clothes.face[$clothes_choice].cost)>>
		<<if $wardrobe.face.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.face.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.face.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.face.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<faceshopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<faceshopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.face[$clothes_choice].cost>>
			<<if $worn.face.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.face.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "face">><<faceshopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "face">><<faceshopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.face[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "face">><<faceshopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.face.cursed>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<faceshopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.face isnot null>>
			<<link [[Return|$passage]]>><<faceshopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
<</if>>
<br>
<<for _i to 0; _i lt setup.clothes.face.length; _i++>>
	<<if setup.clothes.face[_i].shop.includes("clothing")>>
		<<clothingicon setup.clothes.face[_i]>><<print '<<link [['+setup.clothes.face[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.face[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.face[' + _i + '].integrity_max)>><</link>>'>>
		| <span class="teal">£<<print setup.clothes.face[_i].cost / 100>>.</span>
		<<if setup.clothes.face[_i].gender is "m">>
			 | <span class="blue">♂</span>
		<<elseif setup.clothes.face[_i].gender is "f">>
			 | <span class="pink">♀</span>
		<</if>>
	<br>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "neckshopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0] is "buy">>
You buy the <<print setup.clothes.neck[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.neck[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "neck">>
<<elseif $args[0] is "return">>
<<clothingReset "neck">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<neckwear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<neckwear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<neckwear _shop_temp $accessorycolouraction>>
		<<else>>
		<<neckwear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "neck">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<necksend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<necksend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<necksend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<necksend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "neckshop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.neck[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.neck[$clothes_choice].name>>. <<if setup.clothes.neck[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.neck[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.neck[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.neck[$clothes_choice].cost / 100>>.</span>
<br><br>

<<shoptraits>>
<br>

	<<if setup.clothes.neck[$clothes_choice].colour_options.length isnot 0>>
	There's a range of colours to choose from:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
			<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
				<<set $colouraction to $shopDefaults.color>>
				<<set $shopDefaults.colorSet to $shopDefaults.color>>
			<</if>>
			<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>

	<<if setup.clothes.neck[$clothes_choice].accessory_colour_options.length isnot 0>>
	Secondary colour:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
			<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
				<<set $accessorycolouraction to $shopDefaults.secColor>>
				<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
			<</if>>
			<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>
	<<if setup.clothes.neck[$clothes_choice].colour_options.length isnot 0 or setup.clothes.neck[$clothes_choice].accessory_colour_options.length isnot 0>>
		<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
		<br>
		<<shopCustomColors>>
	<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "neck" $clothes_choice>></div>
			<br>
		<</if>>
	<<shopBuyItemStatus "neck" setup.clothes.neck[$clothes_choice].name>>
	<<set _cost to clone(setup.clothes.neck[$clothes_choice].cost)>>
		<<if $wardrobe.neck.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.neck.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.neck.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.neck.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<neckshopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<neckshopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.neck[$clothes_choice].cost>>
			<<if $worn.neck.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.neck.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "neck">><<neckshopbuy "buy" "wear" $clothes_choice 1>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "neck">><<neckshopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.neck[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "neck">><<neckshopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.neck.cursed>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<neckshopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.neck isnot null>>
			<<link [[Return|$passage]]>><<neckshopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
<</if>>
<br>
<<if $location is "forest">>
<<neckforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.neck.length; _i++>>
		<<if setup.clothes.neck[_i].shop.includes("clothing")>>
			<<clothingicon setup.clothes.neck[_i]>><<print '<<link [['+setup.clothes.neck[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.neck[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.neck[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.neck[_i].cost / 100>>.</span>
			<<if setup.clothes.neck[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.neck[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "legsshopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0] is "buy">>
You buy the <<print setup.clothes.legs[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.legs[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "legs">>
<<elseif $args[0] is "return">>
<<clothingReset "legs">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<legswear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<legswear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<legswear _shop_temp $accessorycolouraction>>
		<<else>>
		<<legswear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "legs">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<legssend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<legssend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<legssend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<legssend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "legsshop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.legs[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.legs[$clothes_choice].name>>. <<if setup.clothes.legs[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.legs[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.legs[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.legs[$clothes_choice].cost / 100>>.</span>
<br><br>

<<shoptraits>>
<br>

	<<if setup.clothes.legs[$clothes_choice].colour_options.length isnot 0>>
	There's a range of colours to choose from:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
			<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
				<<set $colouraction to $shopDefaults.color>>
				<<set $shopDefaults.colorSet to $shopDefaults.color>>
			<</if>>
			<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>

	<<if setup.clothes.legs[$clothes_choice].accessory_colour_options.length isnot 0>>
	Secondary colour:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
			<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
				<<set $accessorycolouraction to $shopDefaults.secColor>>
				<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
			<</if>>
			<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
		<br><br>
	<</if>>
	<<if setup.clothes.legs[$clothes_choice].colour_options.length isnot 0 or setup.clothes.legs[$clothes_choice].accessory_colour_options.length isnot 0>>
		<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
		<br>
		<<shopCustomColors>>
	<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "legs" $clothes_choice>></div>
			<br>
		<</if>>
	<<shopBuyItemStatus "legs" setup.clothes.legs[$clothes_choice].name>>
	<<set _cost to clone(setup.clothes.legs[$clothes_choice].cost)>>
		<<if $wardrobe.legs.length gte $wardrobe.space>>
			<span class="blue">Your wardrobe is full. <i>$wardrobe.legs.length / $wardrobe.space</i></span>
			<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.legs.cursed is 1>>
				<span class="blue">You can't wear this item without first removing your $worn.legs.name.</span>
				<br>
			<<else>>
				<<link [[Steal and wear|$passage]]>><<legsshopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
				<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<legsshopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.legs[$clothes_choice].cost>>
			<<if $worn.legs.cursed is 1>>
				<span class="blue">You can't wear this item without first removing your $worn.legs.name.</span>
				<br>
			<<else>>

				<<link [[Buy and wear|$passage]]>><<clothingReset "legs">><<legsshopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
				<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "legs">><<legsshopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.legs[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "legs">><<legsshopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
			<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>>
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.legs.cursed>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<legsshopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.legs isnot null>>
			<<link [[Return|$passage]]>><<legsshopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
<</if>>
<br>
<<if $location is "forest">>
	<<legsforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.legs.length; _i++>>
		<<if setup.clothes.legs[_i].shop.includes("clothing")>>
			<<clothingicon setup.clothes.legs[_i]>><<print '<<link [['+setup.clothes.legs[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.legs[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.legs[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.legs[_i].cost / 100>>.</span>
			<<if setup.clothes.legs[_i].gender is "m">>
				 | <span class="blue">♂</span>
			<<elseif setup.clothes.legs[_i].gender is "f">>
				 | <span class="pink">♀</span>
			<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "feetshopbuy">><<nobr>>
<<set _shop_temp to $args[2]>>
<<set $clothes_choice_previous to $clothes_choice>>

<<if $args[0] is "buy">>
You buy the <<print setup.clothes.feet[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "steal">>
You steal the <<print setup.clothes.feet[_shop_temp].name>>.
<br><br>
<<elseif $args[0] is "try">>
<<tryOnWear _shop_temp "feet">>
<<elseif $args[0] is "return">>
<<clothingReset "feet">>
<<elseif $args[0] is "reset">>
<<unset $colouraction>>
<<unset $accessorycolouraction>>
<<set $shopDefaults.colorSet to null>>
<<set $shopDefaults.secColorSet to null>>
<</if>>

<<if $args[1] is "wear">>
	<<if $colouraction isnot undefined>>
		<<if $accessorycolouraction isnot undefined>>
		<<feetwear _shop_temp $colouraction $accessorycolouraction>>
		<<else>>
		<<feetwear _shop_temp $colouraction>>
		<</if>>
	<<else>>
		<<if $accessorycolouraction isnot undefined>>
		<<feetwear _shop_temp $accessorycolouraction>>
		<<else>>
		<<feetwear _shop_temp>>
		<</if>>
	<</if>>
	<<updateOwned "feet">>
<<elseif $args[1] is "send">>
	<<set _loop to $args[3]>>
	<<if _loop is undefined>>
		<<set _loop to 1>>
	<</if>>
	<<for _s to 0; _s lt _loop; _s++>>
		<<if $colouraction isnot undefined>>
			<<if $accessorycolouraction isnot undefined>>
			<<feetsend _shop_temp "wardrobe" $colouraction $accessorycolouraction>>
			<<else>>
			<<feetsend _shop_temp "wardrobe" $colouraction>>
			<</if>>
		<<else>>
			<<if $accessorycolouraction isnot undefined>>
			<<feetsend _shop_temp "wardrobe" $accessorycolouraction>>
			<<else>>
			<<feetsend _shop_temp "wardrobe">>
			<</if>>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "feetshop">><<nobr>>
<<if $clothes_choice>>/*clothes_choice carries the index of the chosen item*/

<<set _temp_choice to clone(setup.clothes.feet[$clothes_choice])>>/*Avoids using two variables as indices, as it didn't want to work.*/
<<if _temp_choice.plural is 1>><<integrity $clothes_choice_integrity "cap">><<else>>A <<integrity $clothes_choice_integrity>><</if>> and <<reveal $clothes_choice_reveal>> <<print setup.clothes.feet[$clothes_choice].name>>. <<if setup.clothes.feet[$clothes_choice].gender is "m">><span class="lblue">For boys.</span><<elseif setup.clothes.feet[$clothes_choice].gender is "f">><span class="pink">For girls.</span><</if>> <<print setup.clothes.feet[$clothes_choice].description>> Costs <span class="gold">£<<print setup.clothes.feet[$clothes_choice].cost / 100>>.</span>
<br><br>

<<shoptraits>>
<br>

	<<if setup.clothes.feet[$clothes_choice].colour_options.length isnot 0>>
	There's a range of colours to choose from:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.colour_options.length; _e++>>
			<<if $shopDefaults.colorSet isnot $shopDefaults.color and _temp_choice.colour_options.includes($shopDefaults.color)>>
				<<set $colouraction to $shopDefaults.color>>
				<<set $shopDefaults.colorSet to $shopDefaults.color>>
			<</if>>
			<<if $colouraction is _temp_choice.colour_options[_e] or (_setChecked is false and _e is _temp_choice.colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.colour_options[_e] + '"> _temp_choice.colour_options[_e]</span> <<radiobutton "$colouraction" "' + _temp_choice.colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>

	<<if setup.clothes.feet[$clothes_choice].accessory_colour_options.length isnot 0>>
	Secondary colour:
	<br>
		<<set _setChecked to false>>
		<<for _e to 0; _e lt _temp_choice.accessory_colour_options.length; _e++>>
			<<if $shopDefaults.secColorSet isnot $shopDefaults.secColor and _temp_choice.colour_options.includes($shopDefaults.secColor)>>
				<<set $accessorycolouraction to $shopDefaults.secColor>>
				<<set $shopDefaults.secColorSet to $shopDefaults.secColor>>
			<</if>>
			<<if $accessorycolouraction is _temp_choice.accessory_colour_options[_e] or (_setChecked is false and _e is _temp_choice.accessory_colour_options.length - 1)>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '" checked>></label> |'>>
				<<set _setChecked to true>>
			<<else>>
				<<print '<label><span class="' + _temp_choice.accessory_colour_options[_e] + '"> _temp_choice.accessory_colour_options[_e]</span> <<radiobutton "$accessorycolouraction" "' + _temp_choice.accessory_colour_options[_e] + '">></label> |'>>
			<</if>>
		<</for>>
	<br><br>
	<</if>>
	<<if setup.clothes.feet[$clothes_choice].colour_options.length isnot 0 or setup.clothes.feet[$clothes_choice].accessory_colour_options.length isnot 0>>
		<input type="button" value="Custom Colours" onclick="SugarCube.Wikifier.wikifyEval('<<shopCustomColorsToggle>>');">
		<br>
		<<shopCustomColors>>
	<</if>>
		<<if $images is 1>>
			<input type="button" value="Image" onclick="SugarCube.Wikifier.wikifyEval('<<shopFullImageToggle>>');">
			<br>
			<div id="shopFullImage" @class="($shopDefaults.invertImagesHidden is true? '' : ' hidden')"><<shopFullImage "feet" $clothes_choice>></div>
			<br>
		<</if>>
	<<shopBuyItemStatus "feet" setup.clothes.feet[$clothes_choice].name>>
	<<set _cost to clone(setup.clothes.feet[$clothes_choice].cost)>>
		<<if $wardrobe.feet.length gte $wardrobe.space>>
		<span class="blue">Your wardrobe is full. <i>$wardrobe.feet.length / $wardrobe.space</i></span>
		<br>
		<<elseif $daystate is "night" and $location isnot "forest">>
			<<if $worn.feet.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.feet.name.</span>
			<br>
			<<else>>
			<<link [[Steal and wear|$passage]]>><<feetshopbuy "steal" "wear" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
			<</if>>
			<<link [[Steal and send home|$passage]]>><<feetshopbuy "steal" "send" $clothes_choice>><<crimeup _cost / 100>><<unset $clothes_choice>><</link>><<crime>>
			<br>
		<<elseif $money gte setup.clothes.feet[$clothes_choice].cost>>
			<<if $worn.feet.cursed is 1>>
			<span class="blue">You can't wear this item without first removing your $worn.feet.name.</span>
			<br>
			<<else>>

			<<link [[Buy and wear|$passage]]>><<clothingReset "feet">><<feetshopbuy "buy" "wear" $clothes_choice>><<set $money -= _cost>><<unset $clothes_choice>><</link>>
			<br>
			<</if>>
			<<link [[Buy and send home|$passage]]>><<clothingReset "feet">><<feetshopbuy "buy" "send" $clothes_choice 1>><<set $money -= _cost>>
				<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<<if $money gte setup.clothes.feet[$clothes_choice].cost * 5>>
			<<link [[X 5|$passage]]>><<clothingReset "feet">><<feetshopbuy "buy" "send" $clothes_choice 5>><<set $money -= _cost * 5>>
				<<if $shopDefaults.disableReturn is false>><<unset $clothes_choice>><</if>>
			<</link>> |
			<</if>>
			<br>
		<<else>>
		<span class="pink">You cannot afford this item.</span>
		<br>
		<</if>>
		<<if $worn.feet.cursed>>
		<<elseif $tryOn.tryingOn>>
			<<link [[Try On|$passage]]>><<feetshopbuy "try" null $clothes_choice>><</link>>
			<br>
			<<if $tryOn.tryingOn.feet isnot null>>
			<<link [[Return|$passage]]>><<feetshopbuy "return" null $clothes_choice>><</link>>
			<br>
			<</if>>
		<</if>>
<</if>>
<br>
<<if $location is "forest">>
	<<feetforestclothes>>
<<else>>
	<<for _i to 0; _i lt setup.clothes.feet.length; _i++>>
		<<if setup.clothes.feet[_i].shop.includes("clothing")>>
			<<clothingicon setup.clothes.feet[_i]>><<print '<<link [['+setup.clothes.feet[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.feet[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.feet[' + _i + '].integrity_max)>><</link>>'>>
			| <span class="teal">£<<print setup.clothes.feet[_i].cost / 100>>.</span>
				<<if setup.clothes.feet[_i].gender is "m">>
					 | <span class="blue">♂</span>
				<<elseif setup.clothes.feet[_i].gender is "f">>
					 | <span class="pink">♀</span>
				<</if>>
		<br>
		<</if>>
	<</for>>
<</if>>

<</nobr>><</widget>>

<<widget "shoptraits">><<nobr>>
Traits:
<br>
<<if _temp_choice.type.includes("normal")>>
Normal - Suitable for everyday use.
<br>
<</if>>
<<if _temp_choice.type.includes("formal")>>
Formal - Suitable for important occasions, and for good etiquette among certain company.
<br>
<</if>>
<<if _temp_choice.type.includes("school")>>
School - Sanctioned uniform of the local school.
<br>
<</if>>
<<if _temp_choice.type.includes("glasses")>>
Glasses - Helps you focus, increasing the rate school skills are improved.
<br>
<</if>>
<<if _temp_choice.type.includes("cool")>>
Fashionable - Increases the rate status improves at school, but some teachers may dislike it.
<br>
<</if>>
<<if _temp_choice.type.includes("swim")>>
Swimwear - Fares well underwater.
<br>
<</if>>
<<if _temp_choice.type.includes("dance")>>
Dance - Flexible enough to withstand the rigours of the dance floor.
<br>
<</if>>
<<if _temp_choice.type.includes("costume")>>
Costume - People may look at this askance outside the right situations.
<br>
<</if>>
<<if _temp_choice.type.includes("serving")>>
Serving - Encourages tips when working as a bartender, waiter or waitress if visible.
<br>
<</if>>
<<if _temp_choice.type.includes("fetish")>>
Fetish - Intrinsically lewd.
<br>
<</if>>
<<if _temp_choice.type.includes("sleep")>>
Sleep - Soft and cosy.
<br>
<</if>>
<<if _temp_choice.type.includes("mask")>>
Mask - Conceals your identity, stopping fame from increasing. Won't fool the police or people who know you.
<br>
<</if>>
<<if _temp_choice.type.includes("holy")>>
Holy - Sacred to the local faith. Increases purity gains and losses.
<br>
<</if>>
<<if _temp_choice.type.includes("dark")>>
Profane - Considered obscene by the local faith. Increases awareness gains and losses.
<br>
<</if>>
<<if _temp_choice.type.includes("binding")>>
Binding - Keeps your arms firmly secure and helpless.
<br>
<</if>>
<<if _temp_choice.type.includes("stealthy")>>
Stealthy - Makes your crimes harder to trace.
<br>
<</if>>
<<if _temp_choice.type.includes("rainproof")>>
Rainproof - Protects you from the rain.
<br>
<</if>>
<</nobr>><</widget>>

<<widget "outfitforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.upper.length; _i++>>
	<<if setup.clothes.upper[_i].shop.includes("forest") and setup.clothes.upper[_i].one_piece is 1>>
		<<if setup.clothes.upper[_i].name is "witch dress">>
			<<if $days gte 47>>
			<<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.upper[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>></span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 21st of October.
			<br>
			<</if>>
		<<elseif setup.clothes.upper[_i].name is "christmas dress">>
			<<if $days gte 102>>
			<<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.upper[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>></span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 15th of December.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "upperforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.upper.length; _i++>>
	<<if setup.clothes.upper[_i].shop.includes("forest") and setup.clothes.upper[_i].one_piece isnot 1>>
		<<if setup.clothes.upper[_i].name is "serafuku">>
			<<if $headdrive is 1>>
			<<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.upper[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>></span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Discover the headteacher's secret.
			<br>
			<</if>>
		<<elseif setup.clothes.upper[_i].name is "slut shirt">>
			<<if $undergroundescape isnot undefined>>
			<<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.upper[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>></span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Survive slavery in an underground brothel.
			<br>
			<</if>>
		<<elseif setup.clothes.upper[_i].name is "vampire jacket">>
			<<if $days gte 47>>
			<<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.upper[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>></span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 21st of October.
			<br>
			<</if>>
		<<elseif setup.clothes.upper[_i].name is "christmas shirt">>
			<<if $days gte 102>>
			<<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.upper[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>></span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 15th of December.
			<br>
			<</if>>
		<<elseif setup.clothes.upper[_i].name is "belly dancer's top">>
			<<if $brothelshowintro gte 1>>
			<<print '<<link [['+setup.clothes.upper[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.upper[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.upper[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>>.</span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.upper[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.upper[_i].cost / 100>></span>
			<<if setup.clothes.upper[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.upper[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Be offered the star role in a show at the brothel.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "lowerforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.lower.length; _i++>>
	<<if setup.clothes.lower[_i].shop.includes("forest") and setup.clothes.lower[_i].one_piece isnot 1>>
		<<if setup.clothes.lower[_i].name is "christmas trousers">>
			<<if $days gte 102>>
			<<print '<<link [['+setup.clothes.lower[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.lower[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.lower[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.lower[_i].cost / 100>>.</span>
			<<if setup.clothes.lower[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.lower[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.lower[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.lower[_i].cost / 100>></span>
			<<if setup.clothes.lower[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.lower[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 15th of December.
			<br>
			<</if>>
		<<elseif setup.clothes.lower[_i].name is "belly dancer's bottoms">>
			<<if $brothelshowintro gte 1>>
			<<print '<<link [['+setup.clothes.lower[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.lower[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.lower[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.lower[_i].cost / 100>>.</span>
			<<if setup.clothes.lower[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.lower[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.lower[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.lower[_i].cost / 100>></span>
			<<if setup.clothes.lower[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.lower[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Be offered the star role in a show at the brothel.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "underlowerforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.under_lower.length; _i++>>
	<<if setup.clothes.under_lower[_i].shop.includes("forest") and setup.clothes.under_lower[_i].one_piece isnot 1>>
		<<if setup.clothes.under_lower[_i].name is "loincloth">>
			<<if $syndromeeden is 1 or $syndromewolves is 1>>
			<<print '<<link [['+setup.clothes.under_lower[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.under_lower[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.under_lower[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.under_lower[_i].cost / 100>>.</span>
			<<if setup.clothes.under_lower[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.under_lower[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.under_lower[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.under_lower[_i].cost / 100>></span>
			<<if setup.clothes.under_lower[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.under_lower[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Befriend a lonely hunter. Or join a pack of wolves.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "headforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.head.length; _i++>>
	<<if setup.clothes.head[_i].shop.includes("forest")>>
		<<if setup.clothes.head[_i].name is "witch hat">>
			<<if $days gte 47>>
			<<print '<<link [['+setup.clothes.head[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.head[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.head[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>>.</span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.head[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>></span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 21st of October.
			<br>
			<</if>>
		<<elseif setup.clothes.head[_i].name is "christmas hat">>
			<<if $days gte 102>>
			<<print '<<link [['+setup.clothes.head[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.head[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.head[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>>.</span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.head[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>></span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 15th of December.
			<br>
			<</if>>
		<<elseif setup.clothes.head[_i].name is "chef hat">>
			<<if $chef_state gte 9>>
			<<print '<<link [['+setup.clothes.head[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.head[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.head[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>>.</span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.head[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>></span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Become famous for your cream buns.
			<br>
			<</if>>
		<<elseif setup.clothes.head[_i].name is "fedora">>
			<<if $fedora_unlock is 1>>
			<<print '<<link [['+setup.clothes.head[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.head[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.head[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>>.</span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.head[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.head[_i].cost / 100>></span>
			<<if setup.clothes.head[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.head[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Eavesdrop as a bartender and learn about a criminal undertaking.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "neckforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.neck.length; _i++>>
	<<if setup.clothes.neck[_i].shop.includes("forest")>>
		<<if setup.clothes.neck[_i].name is "holy pendant">>
			<<if $soup_kitchen_known is 1>>
			<<print '<<link [['+setup.clothes.neck[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.neck[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.neck[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.neck[_i].cost / 100>>.</span>
			<<if setup.clothes.neck[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.neck[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.neck[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.neck[_i].cost / 100>></span>
			<<if setup.clothes.neck[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.neck[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Discover the soup kitchen.
			<br>
			<</if>>
		<<elseif setup.clothes.neck[_i].name is "dark pendant">>
			<<if $loft_known is 1>>
			<<print '<<link [['+setup.clothes.neck[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.neck[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.neck[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.neck[_i].cost / 100>>.</span>
			<<if setup.clothes.neck[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.neck[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.neck[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.neck[_i].cost / 100>></span>
			<<if setup.clothes.neck[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.neck[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Discover Bailey's fear.
			<br>
			<</if>>
		<<elseif setup.clothes.neck[_i].name is "stone pendant">>
			<<if $stone_pendant_found is 1>>
			<<print '<<link [['+setup.clothes.neck[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.neck[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.neck[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.neck[_i].cost / 100>>.</span>
			<<if setup.clothes.neck[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.neck[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.neck[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.neck[_i].cost / 100>></span>
			<<if setup.clothes.neck[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.neck[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - Find beneath a loose stone at the temple.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "legsforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.legs.length; _i++>>
	<<if setup.clothes.legs[_i].shop.includes("forest")>>
		<<if setup.clothes.legs[_i].name is "christmas leg warmers">>
			<<if $days gte 102>>
			<<print '<<link [['+setup.clothes.legs[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.legs[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.legs[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.legs[_i].cost / 100>>.</span>
			<<if setup.clothes.legs[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.legs[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.legs[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.legs[_i].cost / 100>></span>
			<<if setup.clothes.legs[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.legs[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 15th of December.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "feetforestclothes">><<nobr>>

<<for _i to 0; _i lt setup.clothes.feet.length; _i++>>
	<<if setup.clothes.feet[_i].shop.includes("forest")>>
		<<if setup.clothes.feet[_i].name is "witch shoes">>
			<<if $days gte 47>>
			<<print '<<link [['+setup.clothes.feet[_i].name_cap+'|$passage]]>><<set $clothes_choice to ' + _i + '>><<set $clothes_choice_reveal to clone(setup.clothes.feet[' + _i + '].reveal)>><<set $clothes_choice_integrity to (setup.clothes.feet[' + _i + '].integrity_max)>><</link>>'>> | <span class="teal">£<<print setup.clothes.feet[_i].cost / 100>>.</span>
			<<if setup.clothes.feet[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.feet[_i].gender is "f">> | <span class="pink">♀</span><</if>> <span class="gold">Unlocked</span>
			<br>
			<<else>>
			<span class="lblue"><<print setup.clothes.feet[_i].name_cap>></span> | <span class="teal">£<<print setup.clothes.feet[_i].cost / 100>></span>
			<<if setup.clothes.feet[_i].gender is "m">> | <span class="blue">♂</span><<elseif setup.clothes.feet[_i].gender is "f">> | <span class="pink">♀</span><</if>> - <span class="black">Locked</span> - In stock from the 21st of October.
			<br>
			<</if>>
		<<else>>
		<</if>>
	<</if>>
<</for>>

<</nobr>><</widget>>

<<widget "shopDefaultOptions">><<nobr>>

<br>
<<set _colorOptions to ["black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow", "custom"]>>
<<set _secondaryColorOptions to ["black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow", "custom"]>>

Primary Colour:
<br>
<<for _i to 0; _i lt _colorOptions.length; _i++>>
	<label><<print '<span class="'+ _colorOptions[_i] +'">' + _colorOptions[_i] + '</span>'>>
	<<print '<<radiobutton "$shopDefaults.color" "'+ _colorOptions[_i] +'" ' + ($shopDefaults.color is _colorOptions[_i] ? "checked" : "") + '>>'>></label>
	 |
<</for>>
<br>
Secondary Colour:
<br>
<<for _i to 0; _i lt _secondaryColorOptions.length; _i++>>
	<label><<print '<span class="'+ _colorOptions[_i] +'">' + _secondaryColorOptions[_i] + '</span>'>>
	<<print '<<radiobutton "$shopDefaults.secColor" "'+ _secondaryColorOptions[_i] +'" ' + ($shopDefaults.secColor is _secondaryColorOptions[_i] ? "checked" : "") + '>>'>></label>
	 |
<</for>>
<br><br>
<label><<print '<<checkbox "$shopDefaults.disableReturn" false true '+($shopDefaults.disableReturn is true? "checked" : "")+'>>'>> Make it easier to send multiple of the same item home.</label>
<br>
<label><<print '<<checkbox "$shopDefaults.invertCustomColorsHidden" false true '+($shopDefaults.invertCustomColorsHidden is true? "checked" : "")+'>>'>> Show custom colours by default.</label>
<br>
<<if $images is 1>>
<label><<print '<<checkbox "$shopDefaults.invertImagesHidden" false true '+($shopDefaults.invertImagesHidden is true? "checked" : "")+'>>'>> Show clothes images by default.</label>
<br>
<</if>>
<</nobr>><</widget>>

<<widget "shopDefaultOptionsToggle">><<nobr>>
<<toggleclass #shopDefault "hidden">>
<</nobr>><</widget>>

<<widget "shopCustomColorsToggle">><<nobr>>
<<toggleclass #shopCustomColorsDisplay "hidden">>
<<toggleclass #customColorBars "hidden">>
<<toggleclass #ColorsPresets "hidden">>
<</nobr>><</widget>>

<<widget "shopCustomColors">><<nobr>>
<br>
<div id="shopCustomColorsDisplay" @class="'shopCustomColors' + ($shopDefaults.invertCustomColorsHidden is true? '' : ' hidden')"><<shopCustomColorsDisplay>></div>
<div id="customColorBars" @class="'shopCustomColors' + ($shopDefaults.invertCustomColorsHidden is true? '' : ' hidden')"><<shopCustomColorsBars>></div>
<div style="clear:both;"></div>
<div id="ColorsPresets" @class="($shopDefaults.invertCustomColorsHidden is true? '' : 'hidden')"><<shopCustomColorsPresets>></div>
<</nobr>><</widget>>

<<widget "shopCustomColorsDisplay">><<nobr>>
__Custom Colours__
<div id="customColor">
	<div @style="customColor($customColors.color.primary, $customColors.saturation.primary, $customColors.brightness.primary, $customColors.contrast.primary, $customColors.sepia.primary)"></div>
	Primary - Colour: $customColors.color.primary | Saturation: $customColors.saturation.primary | Brightness: $customColors.brightness.primary | Contrast: $customColors.contrast.primary | Sepia: $customColors.sepia.primary
	<div @style="customColor($customColors.color.secondary, $customColors.saturation.secondary, $customColors.brightness.secondary, $customColors.contrast.secondary, $customColors.sepia.secondary)"></div>
	Secondary - Colour: $customColors.color.secondary | Saturation: $customColors.saturation.secondary | Brightness: $customColors.brightness.secondary | Contrast: $customColors.contrast.secondary | Sepia: $customColors.sepia.secondary
</div>
<br>
<label><<print '<<radiobutton "$customColors.currentType" "primary" ' + ($customColors.currentType is "primary" ? "checked" : "") + '>>'>> Primary</label> |
<label><<print '<<radiobutton "$customColors.currentType" "secondary" ' + ($customColors.currentType is "secondary" ? "checked" : "") + '>>'>> Secondary</label>
| <<link "Refresh">>
	<<replace #customColorBars>><<shopCustomColorsBars>><</replace>>
<</link>>
<br><br><br>
<<link "Reset selected to default">>
	<<set $customColors.color[$customColors.currentType] to 0>>
	<<set $customColors.saturation[$customColors.currentType] to 1>>
	<<set $customColors.brightness[$customColors.currentType] to 1>>
	<<set $customColors.contrast[$customColors.currentType] to 1>>
	<<set $customColors.sepia[$customColors.currentType] to 0>>
	<<replace #customColorBars>><<shopCustomColorsBars>><</replace>>
	<<replace #shopCustomColorsDisplay>><<shopCustomColorsDisplay>><</replace>>
<</link>>
<</nobr>><</widget>>

<<widget "shopCustomColorsBars">><<nobr>>

Colour:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="360" step="1" @value="$customColors.color[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','color', this.value)">
</div>
<br>
Saturation:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="2" step="0.05" @value="$customColors.saturation[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','saturation', this.value)">
</div>
<br>
Brightness:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0.5" max="4" step="0.05" @value="$customColors.brightness[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','brightness', this.value)">
</div>
Contrast:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="2" step="0.05" @value="$customColors.contrast[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','contrast', this.value)">
</div>
Sepia:
<div id="numberslider-body-customColor" class="macro-numberslider">
	<input type="range" min="0" max="1" step="0.05" @value="$customColors.sepia[$customColors.currentType]" oninput="wikifier('shopCustomColorsSet','sepia', this.value)">
</div>
<</nobr>><</widget>>

<<widget "shopCustomColorsSet">><<nobr>>
<<if $args[0] and $args[1]>>
	<<switch $args[0]>>
		<<case "color">><<set $customColors.color[$customColors.currentType] to $args[1]>>
		<<case "saturation">><<set $customColors.saturation[$customColors.currentType] to $args[1]>>
		<<case "brightness">><<set $customColors.brightness[$customColors.currentType] to $args[1]>>
		<<case "contrast">><<set $customColors.contrast[$customColors.currentType] to $args[1]>>
		<<case "sepia">><<set $customColors.sepia[$customColors.currentType] to $args[1]>>
	<</switch>>
	<<replace #shopCustomColorsDisplay>><<shopCustomColorsDisplay>><</replace>>
<</if>>
<</nobr>><</widget>>

<<widget "shopCustomColorsPresets">><<nobr>>
<br>
<label><<print '<<radiobutton "$customColors.action" "set" ' + ($customColors.action is "set" ? "checked" : "") + '>>'>> Set</label> |
<label><<print '<<radiobutton "$customColors.action" "delete" ' + ($customColors.action is "delete" ? "checked" : "") + '>>'>> Delete</label>
<<set _keys to Object.keys($customColors.presets)>>
<br>
<<for _i to 0; _i lt _keys.length;_i++>>
	<a @onclick="`wikifier('shopCustomColorsPresetsLoad',`+_i+`)`">_keys[_i]</a> |
<</for>>
<br>
Name: <input id="colorName" type="text" value="Custom" onfocus="SugarCube.State.variables.tempDisable = true;">
<br>
<<link [["Save Set"|$passage]]>>
	<<script>>
		SugarCube.State.temporary.colorName = document.getElementById("colorName").value;
	<</script>>
	<<set $customColors.presets[_colorName] to {
		color: $customColors.color,
		saturation: $customColors.saturation,
		brightness: $customColors.brightness,
		contrast: $customColors.contrast,
		sepia: $customColors.sepia,
	}>>
	<<unset $tempDisable>>
<</link>>
<br><br>
<</nobr>><</widget>>

<<widget "shopCustomColorsPresetsLoad">><<nobr>>
<<set _presets to Object.keys($customColors.presets)>>
<<set _preset to _presets[$args[0]]>>
<<if $customColors.action is "set">>
	<<set $customColors.color.primary to $customColors.presets[_preset].color.primary>>
	<<set $customColors.color.secondary to $customColors.presets[_preset].color.secondary>>
	<<set $customColors.saturation.primary to $customColors.presets[_preset].saturation.primary>>
	<<set $customColors.saturation.secondary to $customColors.presets[_preset].saturation.secondary>>
	<<set $customColors.brightness.primary to $customColors.presets[_preset].brightness.primary>>
	<<set $customColors.brightness.secondary to $customColors.presets[_preset].brightness.secondary>>
	<<if $customColors.presets[_preset].contrast isnot undefined>>
		<<set $customColors.contrast.primary to $customColors.presets[_preset].contrast.primary>>
		<<set $customColors.contrast.secondary to $customColors.presets[_preset].contrast.secondary>>
	<</if>>
	<<if $customColors.presets[_preset].sepia isnot undefined>>
		<<set $customColors.sepia.primary to $customColors.presets[_preset].sepia.primary>>
		<<set $customColors.sepia.secondary to $customColors.presets[_preset].sepia.secondary>>
	<</if>>
	<<replace #shopCustomColorsDisplay>><<shopCustomColorsDisplay>><</replace>>
	<<replace #customColorBars>><<shopCustomColorsBars>><</replace>>
<<elseif $customColors.action is "delete">>>>
	<<set _newPresets to {}>>
	<<for _i to 0; _i lt _presets.length;_i++>>
		<<if _presets[_i] isnot _preset>>
			<<set _newPresets[_presets[_i]] to clone($customColors.presets[_presets[_i]])>>
		<</if>>
	<</for>>
	<<set $customColors.presets to clone(_newPresets)>>
	<<replace #ColorsPresets>><<shopCustomColorsPresets>><</replace>>
<</if>>
<</nobr>><</widget>>

/*Args: slot, itemName, outfit*/
<<widget "shopBuyItemStatus">><<nobr>>
<<if $args[0] and $args[1] isnot undefined>>
	<<set _count to 0>>
	<<for _i to 0; _i lt $wardrobe[$args[0]].length; _i++>>
		<<if $wardrobe[$args[0]][_i].name is $args[1]>>
			<<if $args[2] isnot true>>
				<<set _count++>>
			<<else>>
				<<if $wardrobe[$args[0]][_i].one_piece is 1>>
					<<set _count++>>
				<</if>>
			<</if>>
		<</if>>
	<</for>>
	Wardrobe <<print ($args[0]).replace("_"," ")>> slots used: <<print $wardrobe[$args[0]].length>> / 40.
	You own _count of this item<<if $args[2] is true>> that have not been broken<</if>>.
	<br>
<</if>>
<</nobr>><</widget>>

/*Args: slot, itemName, outfit*/
<<widget "shopFullImage">><<nobr>>
<<if $args[0] and $args[1] isnot undefined>>
	<<if _shopFullImageVar is undefined>>
		<<set _shopFullImageVar to [$args[0], $args[1]]>>
	<</if>>
	<a value="Refresh" onclick="SugarCube.Wikifier.wikifyEval('<<replace #shopFullImage>><<shopFullImage SugarCube.State.temporary.shopFullImageVar[0] SugarCube.State.temporary.shopFullImageVar[1]>><</replace>>');">Refresh</a>
	<br>
	<div class="hideImageOverflow">
		<div @class="'shopImg ' + _shopFullImageVar[0] + '-'+$colouraction + ' ' + _shopFullImageVar[0] + '_acc-' + $accessorycolouraction">
			<img @class="'colour-'+_shopFullImageVar[0]" @src="'img/clothes/' + _shopFullImageVar[0] + '/' + setup.clothes[_shopFullImageVar[0]][_shopFullImageVar[1]].variable + '/full.png'" @style="($colouraction is 'custom'? customColor($customColors.color.primary, $customColors.saturation.primary, $customColors.brightness.primary, $customColors.contrast.primary, $customColors.sepia.primary):'')">
			<<if setup.clothes[_shopFullImageVar[0]][_shopFullImageVar[1]].accessory is 1>>
				<img @class="'colour-'+_shopFullImageVar[0] + '_acc'" @src="'img/clothes/' + _shopFullImageVar[0] + '/' + setup.clothes[_shopFullImageVar[0]][_shopFullImageVar[1]].variable + '/acc.png'" @style="($colouraction is 'custom'? customColor($customColors.color.secondary, $customColors.saturation.secondary, $customColors.brightness.secondary, $customColors.contrast.secondary, $customColors.sepia.secondary):'')">
			<</if>>
			<<if _shopFullImageVar[0] is "upper" or _shopFullImageVar[0] is "under_upper">>
				<<if setup.clothes[_shopFullImageVar[0]][_shopFullImageVar[1]].one_piece is 1>>
					<<if _shopFullImageVar[2] is undefined>>
						<<if _shopFullImageVar[0] is "upper">>
							<<run _shopFullImageVar.push("lower")>>
						<<else>>
							<<run _shopFullImageVar.push("under_lower")>>
						<</if>>
						<<for _i to 0; _i lt setup.clothes[_shopFullImageVar[2]].length; _i++>>
							<<if setup.clothes[_shopFullImageVar[2]][_i].set is setup.clothes[_shopFullImageVar[0]][_shopFullImageVar[1]].set>>
								<<set _shopFullImageVar.push(_i)>>
								<<break>>
							<</if>>
						<</for>>
					<</if>>
					<<if _shopFullImageVar[3]>>
						<img @class="'colour-'+_shopFullImageVar[0]" @src="'img/clothes/' + _shopFullImageVar[2] + '/' + setup.clothes[_shopFullImageVar[2]][_shopFullImageVar[3]].variable + '/full.png'" @style="($colouraction is 'custom'? customColor($customColors.color.primary, $customColors.saturation.primary, $customColors.brightness.primary, $customColors.contrast.primary, $customColors.sepia.primary):'')">
						<<if setup.clothes[_shopFullImageVar[2]][_shopFullImageVar[3]].accessory is 1>>
							<img @class="'colour-'+_shopFullImageVar[0] + '_acc'" @src="'img/clothes/' + _shopFullImageVar[2] + '/' + setup.clothes[_shopFullImageVar[2]][_shopFullImageVar[3]].variable + '/acc.png'" @style="($colouraction is 'custom'? customColor($customColors.color.secondary, $customColors.saturation.secondary, $customColors.brightness.secondary, $customColors.contrast.secondary, $customColors.sepia.secondary):'')">
						<</if>>
					<</if>>
				<</if>>
			<</if>>
		</div>
	</div>
<</if>>
<</nobr>><</widget>>

<<widget "shopFullImageToggle">><<nobr>>
<<toggleclass #shopFullImage "hidden">>
<</nobr>><</widget>>
